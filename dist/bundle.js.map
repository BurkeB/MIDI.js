{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n\n},{}],2:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n},{}],3:[function(require,module,exports){\n/**\n * lodash 3.3.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseIsEqual = require('lodash._baseisequal'),\n    bindCallback = require('lodash._bindcallback'),\n    isArray = require('lodash.isarray'),\n    pairs = require('lodash.pairs');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} matchData The propery names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = toObject(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.matches` which does not clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value && (value !== undefined || (key in toObject(object)));\n    };\n  }\n  return function(object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to compare.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  var isArr = isArray(path),\n      isCommon = isKey(path) && isStrictComparable(srcValue),\n      pathKey = (path + '');\n\n  path = toPath(path);\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    var key = pathKey;\n    object = toObject(object);\n    if ((isArr || !isCommon) && !(key in object)) {\n      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n      if (object == null) {\n        return false;\n      }\n      key = last(path);\n      object = toObject(object);\n    }\n    return object[key] === srcValue\n      ? (srcValue !== undefined || (key in object))\n      : baseIsEqual(srcValue, object[key], undefined, true);\n  };\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Gets the propery names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = baseCallback;\n\n},{\"lodash._baseisequal\":9,\"lodash._bindcallback\":10,\"lodash.isarray\":16,\"lodash.pairs\":22}],4:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n\n},{}],5:[function(require,module,exports){\n/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = require('lodash.keys');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseEach;\n\n},{\"lodash.keys\":19}],6:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n * without support for callback shorthands and `this` binding, which iterates\n * over `collection` using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @param {boolean} [retKey] Specify returning the key of the found element\n *  instead of the element itself.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFind(collection, predicate, eachFunc, retKey) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = retKey ? key : value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFind;\n\n},{}],7:[function(require,module,exports){\n/**\n * lodash 3.6.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n},{}],8:[function(require,module,exports){\n/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseFor;\n\n},{}],9:[function(require,module,exports){\n/**\n * lodash 3.0.7 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArray = require('lodash.isarray'),\n    isTypedArray = require('lodash.istypedarray'),\n    keys = require('lodash.keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `_.some` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing arrays.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} value The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseIsEqual;\n\n},{\"lodash.isarray\":16,\"lodash.istypedarray\":18,\"lodash.keys\":19}],10:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n\n},{}],11:[function(require,module,exports){\n/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall'),\n    restParam = require('lodash.restparam');\n\n/**\n * Creates a function that assigns properties of source object(s) to a given\n * destination object.\n *\n * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n},{\"lodash._bindcallback\":10,\"lodash._isiterateecall\":13,\"lodash.restparam\":23}],12:[function(require,module,exports){\n/**\n * lodash 3.9.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = getNative;\n\n},{}],13:[function(require,module,exports){\n/**\n * lodash 3.0.9 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isIterateeCall;\n\n},{}],14:[function(require,module,exports){\n/**\n * lodash 3.2.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCallback = require('lodash._basecallback'),\n    baseEach = require('lodash._baseeach'),\n    baseFind = require('lodash._basefind'),\n    baseFindIndex = require('lodash._basefindindex'),\n    isArray = require('lodash.isarray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.result(_.find(users, function(chr) {\n *   return chr.age < 40;\n * }), 'user');\n * // => 'barney'\n *\n * // using the `_.matches` callback shorthand\n * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n * // => 'pebbles'\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.result(_.find(users, 'active', false), 'user');\n * // => 'fred'\n *\n * // using the `_.property` callback shorthand\n * _.result(_.find(users, 'active'), 'user');\n * // => 'barney'\n */\nvar find = createFind(baseEach);\n\nmodule.exports = find;\n\n},{\"lodash._basecallback\":3,\"lodash._baseeach\":5,\"lodash._basefind\":6,\"lodash._basefindindex\":7,\"lodash.isarray\":16}],15:[function(require,module,exports){\n/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n\n},{}],16:[function(require,module,exports){\n/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isArray;\n\n},{}],17:[function(require,module,exports){\n/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseFor = require('lodash._basefor'),\n    isArguments = require('lodash.isarguments'),\n    keysIn = require('lodash.keysin');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return result === undefined || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = isPlainObject;\n\n},{\"lodash._basefor\":8,\"lodash.isarguments\":15,\"lodash.keysin\":20}],18:[function(require,module,exports){\n/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n},{}],19:[function(require,module,exports){\n/**\n * lodash 3.1.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = require('lodash._getnative'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n},{\"lodash._getnative\":12,\"lodash.isarguments\":15,\"lodash.isarray\":16}],20:[function(require,module,exports){\n/**\n * lodash 3.0.8 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n\n},{\"lodash.isarguments\":15,\"lodash.isarray\":16}],21:[function(require,module,exports){\n/**\n * lodash 3.3.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayCopy = require('lodash._arraycopy'),\n    arrayEach = require('lodash._arrayeach'),\n    createAssigner = require('lodash._createassigner'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray'),\n    isPlainObject = require('lodash.isplainobject'),\n    isTypedArray = require('lodash.istypedarray'),\n    keys = require('lodash.keys'),\n    toPlainObject = require('lodash.toplainobject');\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns `object`.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n      props = isSrcArr ? undefined : keys(source);\n\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    else {\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    }\n  });\n  return object;\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n  var length = stackA.length,\n      srcValue = source[key];\n\n  while (length--) {\n    if (stackA[length] == srcValue) {\n      object[key] = stackB[length];\n      return;\n    }\n  }\n  var value = object[key],\n      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n      isCommon = result === undefined;\n\n  if (isCommon) {\n    result = srcValue;\n    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n      result = isArray(value)\n        ? value\n        : (isArrayLike(value) ? arrayCopy(value) : []);\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      result = isArguments(value)\n        ? toPlainObject(value)\n        : (isPlainObject(value) ? value : {});\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate\n  // it with its merged value.\n  stackA.push(srcValue);\n  stackB.push(result);\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n  } else if (result === result ? (result !== value) : (value === value)) {\n    object[key] = result;\n  }\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * overwrite property assignments of previous sources. If `customizer` is\n * provided it is invoked to produce the merged values of the destination and\n * source properties. If `customizer` returns `undefined` merging is handled\n * by the method instead. The `customizer` is bound to `thisArg` and invoked\n * with five arguments: (objectValue, sourceValue, key, object, source).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var users = {\n *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n * };\n *\n * var ages = {\n *   'data': [{ 'age': 36 }, { 'age': 40 }]\n * };\n *\n * _.merge(users, ages);\n * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n *\n * // using a customizer callback\n * var object = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var other = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(object, other, function(a, b) {\n *   if (_.isArray(a)) {\n *     return a.concat(b);\n *   }\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n */\nvar merge = createAssigner(baseMerge);\n\nmodule.exports = merge;\n\n},{\"lodash._arraycopy\":1,\"lodash._arrayeach\":2,\"lodash._createassigner\":11,\"lodash.isarguments\":15,\"lodash.isarray\":16,\"lodash.isplainobject\":17,\"lodash.istypedarray\":18,\"lodash.keys\":19,\"lodash.toplainobject\":24}],22:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = require('lodash.keys');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n\n},{\"lodash.keys\":19}],23:[function(require,module,exports){\n/**\n * lodash 3.6.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n\n},{}],24:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCopy = require('lodash._basecopy'),\n    keysIn = require('lodash.keysin');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable\n * properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return baseCopy(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n},{\"lodash._basecopy\":4,\"lodash.keysin\":20}],25:[function(require,module,exports){\n/*\n    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function(window) {\n    var userContext,\n        userInstance,\n        pipe = function(param, val) {\n            param.value = val;\n        },\n        Super = Object.create(null, {\n            activate: {\n                writable: true,\n                value: function(doActivate) {\n                    if (doActivate) {\n                        this.input.disconnect();\n                        this.input.connect(this.activateNode);\n                        if (this.activateCallback) {\n                            this.activateCallback(doActivate);\n                        }\n                    } else {\n                        this.input.disconnect();\n                        this.input.connect(this.output);\n                    }\n                }\n            },\n            bypass: {\n                get: function() {\n                    return this._bypass;\n                },\n                set: function(value) {\n                    if (this._lastBypassValue === value) {\n                        return;\n                    }\n                    this._bypass = value;\n                    this.activate(!value);\n                    this._lastBypassValue = value;\n                }\n            },\n            connect: {\n                value: function(target) {\n                    this.output.connect(target);\n                }\n            },\n            disconnect: {\n                value: function(target) {\n                    this.output.disconnect(target);\n                }\n            },\n            connectInOrder: {\n                value: function(nodeArray) {\n                    var i = nodeArray.length - 1;\n                    while (i--) {\n                        if (!nodeArray[i].connect) {\n                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n                        }\n                        if (nodeArray[i + 1].input) {\n                            nodeArray[i].connect(nodeArray[i + 1].input);\n                        } else {\n                            nodeArray[i].connect(nodeArray[i + 1]);\n                        }\n                    }\n                }\n            },\n            getDefaults: {\n                value: function() {\n                    var result = {};\n                    for (var key in this.defaults) {\n                        result[key] = this.defaults[key].value;\n                    }\n                    return result;\n                }\n            },\n            automate: {\n                value: function(property, value, duration, startTime) {\n                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n                        dur = duration ? ~~(duration / 1000) : 0,\n                        _is = this.defaults[property],\n                        param = this[property],\n                        method;\n\n                    if (param) {\n                        if (_is.automatable) {\n                            if (!duration) {\n                                method = \"setValueAtTime\";\n                            } else {\n                                method = \"linearRampToValueAtTime\";\n                                param.cancelScheduledValues(start);\n                                param.setValueAtTime(param.value, start);\n                            }\n                            param[method](value, dur + start);\n                        } else {\n                            param = value;\n                        }\n                    } else {\n                        console.error(\"Invalid Property for \" + this.name);\n                    }\n                }\n            }\n        }),\n        FLOAT = \"float\",\n        BOOLEAN = \"boolean\",\n        STRING = \"string\",\n        INT = \"int\";\n\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = Tuna;\n    } else if (typeof define === \"function\") {\n        window.define(\"Tuna\", definition);\n    } else {\n        window.Tuna = Tuna;\n    }\n\n    function definition() {\n        return Tuna;\n    }\n\n    function Tuna(context) {\n        if (!(this instanceof Tuna)) {\n            return new Tuna(context);\n        }\n        if (!window.AudioContext) {\n            window.AudioContext = window.webkitAudioContext;\n        }\n        if (!context) {\n            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n            context = window.AudioContext && (new window.AudioContext());\n        }\n        if (!context) {\n            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n        }\n        connectify(context);\n        userContext = context;\n        userInstance = this;\n    }\n\n    function connectify(context) {\n        if (context.__connectified__ === true) return;\n\n        var gain = context.createGain(),\n            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n            oconnect = proto.connect;\n\n        proto.connect = shimConnect;\n        context.__connectified__ = true; // Prevent overriding connect more than once\n\n        function shimConnect() {\n            var node = Array.prototype.shift.apply(arguments);\n            node = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n            arguments = Array.prototype.slice.call(arguments);\n            arguments.unshift(node);\n            oconnect.apply(this, arguments);\n            return node;\n        }\n    }\n\n    function dbToWAVolume(db) {\n        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n    }\n\n    function fmod(x, y) {\n        // http://kevin.vanzonneveld.net\n        // *     example 1: fmod(5.7, 1.3);\n        // *     returns 1: 0.5\n        var tmp, tmp2, p = 0,\n            pY = 0,\n            l = 0.0,\n            l2 = 0.0;\n\n        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\n        if (pY > p) {\n            p = pY;\n        }\n\n        tmp2 = (x % y);\n\n        if (p < -100 || p > 20) {\n            // toFixed will give an out of bound error so we fix it like this:\n            l = Math.round(Math.log(tmp2) / Math.log(10));\n            l2 = Math.pow(10, l);\n\n            return (tmp2 / l2).toFixed(l - p) * l2;\n        } else {\n            return parseFloat(tmp2.toFixed(-p));\n        }\n    }\n\n    function sign(x) {\n        if (x === 0) {\n            return 1;\n        } else {\n            return Math.abs(x) / x;\n        }\n    }\n\n    function tanh(n) {\n        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n    }\n\n    function initValue(userVal, defaultVal) {\n        return userVal === undefined ? defaultVal : userVal;\n    }\n\n    Tuna.prototype.Bitcrusher = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var phaser = 0,\n            last = 0,\n            input, output, step, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n            output = e.outputBuffer.getChannelData(0),\n            step = Math.pow(1 / 2, this.bits);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                phaser += this.normfreq;\n                if (phaser >= 1.0) {\n                    phaser -= 1.0;\n                    last = step * Math.floor(input[i] / step + 0.5);\n                }\n                output[i] = last;\n            }\n        };\n\n        this.bits = properties.bits || this.defaults.bits.value;\n        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n        name: {\n            value: \"Bitcrusher\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bits: {\n                    value: 4,\n                    min: 1,\n                    max: 16,\n                    automatable: false,\n                    type: INT\n                },\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                normfreq: {\n                    value: 0.1,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        bits: {\n            enumerable: true,\n            get: function() {\n                return this.processor.bits;\n            },\n            set: function(value) {\n                this.processor.bits = value;\n            }\n        },\n        normfreq: {\n            enumerable: true,\n            get: function() {\n                return this.processor.normfreq;\n            },\n            set: function(value) {\n                this.processor.normfreq = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Cabinet = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = this.newConvolver(properties.impulsePath ||\n            \"../impulses/impulse_guitar.wav\");\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.convolver.input);\n        this.convolver.output.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.makeupGain = initValue(properties.makeupGain, this.defaults\n            .makeupGain);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n        name: {\n            value: \"Cabinet\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                makeupGain: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = value;\n            }\n        },\n        newConvolver: {\n            value: function(impulsePath) {\n                return new userInstance.Convolver({\n                    impulse: impulsePath,\n                    dryLevel: 0,\n                    wetLevel: 1\n                });\n            }\n        }\n    });\n\n    Tuna.prototype.Chorus = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.attenuator = this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.delayL = userContext.createDelay();\n        this.delayR = userContext.createDelay();\n        this.feedbackGainNodeLR = userContext.createGain();\n        this.feedbackGainNodeRL = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.output = userContext.createGain();\n\n        this.lfoL = new userInstance.LFO({\n            target: this.delayL.delayTime,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.delayR.delayTime,\n            callback: pipe\n        });\n\n        this.input.connect(this.attenuator);\n        this.attenuator.connect(this.output);\n        this.attenuator.connect(this.splitter);\n        this.splitter.connect(this.delayL, 0);\n        this.splitter.connect(this.delayR, 1);\n        this.delayL.connect(this.feedbackGainNodeLR);\n        this.delayR.connect(this.feedbackGainNodeRL);\n        this.feedbackGainNodeLR.connect(this.delayR);\n        this.feedbackGainNodeRL.connect(this.delayL);\n        this.delayL.connect(this.merger, 0, 0);\n        this.delayR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.feedback = initValue(properties.feedback, this.defaults.feedback\n            .value);\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.delay = initValue(properties.delay, this.defaults.delay.value);\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.lfoR.phase = Math.PI / 2;\n        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n        name: {\n            value: \"Chorus\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                feedback: {\n                    value: 0.4,\n                    min: 0,\n                    max: 0.95,\n                    automatable: false,\n                    type: FLOAT\n                },\n                delay: {\n                    value: 0.0045,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 1.5,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        delay: {\n            enumerable: true,\n            get: function() {\n                return this._delay;\n            },\n            set: function(value) {\n                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n                this.lfoL.offset = this._delay;\n                this.lfoR.offset = this._delay;\n                this._depth = this._depth;\n            }\n        },\n        depth: {\n            enumerable: true,\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._depth * this._delay;\n                this.lfoR.oscillation = this._depth * this._delay;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeLR.gain.value = this._feedback;\n                this.feedbackGainNodeRL.gain.value = this._feedback;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        }\n    });\n\n    Tuna.prototype.Compressor = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.compNode.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.automakeup = initValue(properties.automakeup, this.defaults\n            .automakeup\n            .value);\n        this.makeupGain = properties.makeupGain || this.defaults.makeupGain\n            .value;\n        this.threshold = initValue(properties.threshold, this.defaults.threshold\n            .value);\n        this.release = properties.release || this.defaults.release.value;\n        this.attack = initValue(properties.attack, this.defaults.attack\n            .value);\n        this.ratio = properties.ratio || this.defaults.ratio.value;\n        this.knee = initValue(properties.knee, this.defaults.knee.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n        name: {\n            value: \"Compressor\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                threshold: {\n                    value: -20,\n                    min: -60,\n                    max: 0,\n                    automatable: true,\n                    type: FLOAT\n                },\n                release: {\n                    value: 250,\n                    min: 10,\n                    max: 2000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                makeupGain: {\n                    value: 1,\n                    min: 1,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                attack: {\n                    value: 1,\n                    min: 0,\n                    max: 1000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                ratio: {\n                    value: 4,\n                    min: 1,\n                    max: 50,\n                    automatable: true,\n                    type: FLOAT\n                },\n                knee: {\n                    value: 5,\n                    min: 0,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                automakeup: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        computeMakeup: {\n            value: function() {\n                var magicCoefficient = 4,\n                    // raise me if the output is too hot\n                    c = this.compNode;\n                return -(c.threshold.value - c.threshold.value /\n                        c.ratio.value) /\n                    magicCoefficient;\n            }\n        },\n        automakeup: {\n            enumerable: true,\n            get: function() {\n                return this._automakeup;\n            },\n            set: function(value) {\n                this._automakeup = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        threshold: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.threshold;\n            },\n            set: function(value) {\n                this.compNode.threshold.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        ratio: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.ratio;\n            },\n            set: function(value) {\n                this.compNode.ratio.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        knee: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.knee;\n            },\n            set: function(value) {\n                this.compNode.knee.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        attack: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.attack;\n            },\n            set: function(value) {\n                this.compNode.attack.value = value / 1000;\n            }\n        },\n        release: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.release;\n            },\n            set: function(value) {\n                this.compNode.release = value / 1000;\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = dbToWAVolume(value);\n            }\n        }\n    });\n\n    Tuna.prototype.Convolver = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = userContext.createConvolver();\n        this.dry = userContext.createGain();\n        this.filterLow = userContext.createBiquadFilter();\n        this.filterHigh = userContext.createBiquadFilter();\n        this.wet = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filterLow);\n        this.activateNode.connect(this.dry);\n        this.filterLow.connect(this.filterHigh);\n        this.filterHigh.connect(this.convolver);\n        this.convolver.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel\n            .value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel\n            .value);\n        this.highCut = properties.highCut || this.defaults.highCut.value;\n        this.buffer = properties.impulse ||\n            \"../impulses/ir_rev_short.wav\";\n        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n        this.level = initValue(properties.level, this.defaults.level.value);\n        this.filterHigh.type = \"lowpass\";\n        this.filterLow.type = \"highpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n        name: {\n            value: \"Convolver\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                highCut: {\n                    value: 22050,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                lowCut: {\n                    value: 20,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                level: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        lowCut: {\n            get: function() {\n                return this.filterLow.frequency;\n            },\n            set: function(value) {\n                this.filterLow.frequency.value = value;\n            }\n        },\n        highCut: {\n            get: function() {\n                return this.filterHigh.frequency;\n            },\n            set: function(value) {\n                this.filterHigh.frequency.value = value;\n            }\n        },\n        level: {\n            get: function() {\n                return this.output.gain;\n            },\n            set: function(value) {\n                this.output.gain.value = value;\n            }\n        },\n        dryLevel: {\n            get: function() {\n                return this.dry.gain\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        wetLevel: {\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        buffer: {\n            enumerable: false,\n            get: function() {\n                return this.convolver.buffer;\n            },\n            set: function(impulse) {\n                var convolver = this.convolver,\n                    xhr = new XMLHttpRequest();\n                if (!impulse) {\n                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n                    return;\n                }\n                xhr.open(\"GET\", impulse, true);\n                xhr.responseType = \"arraybuffer\";\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n                            userContext.decodeAudioData(xhr.response, function(buffer) {\n                                convolver.buffer = buffer;\n                            }, function(e) {\n                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n                            });\n                        }\n                    }\n                };\n                xhr.send(null);\n            }\n        }\n    });\n\n    Tuna.prototype.Delay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.dry = userContext.createGain();\n        this.wet = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.delay = userContext.createDelay();\n        this.feedbackNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.delay);\n        this.activateNode.connect(this.dry);\n        this.delay.connect(this.filter);\n        this.filter.connect(this.feedbackNode);\n        this.feedbackNode.connect(this.delay);\n        this.feedbackNode.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n        this.filter.type = \"lowpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Delay.prototype = Object.create(Super, {\n        name: {\n            value: \"Delay\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTime: {\n                    value: 100,\n                    min: 20,\n                    max: 1000,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.45,\n                    min: 0,\n                    max: 0.9,\n                    automatable: true,\n                    type: FLOAT\n                },\n                cutoff: {\n                    value: 20000,\n                    min: 20,\n                    max: 20000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        delayTime: {\n            enumerable: true,\n            get: function() {\n                return this.delay.delayTime;\n            },\n            set: function(value) {\n                this.delay.delayTime.value = value / 1000;\n            }\n        },\n        wetLevel: {\n            enumerable: true,\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        dryLevel: {\n            enumerable: true,\n            get: function() {\n                return this.dry.gain;\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this.feedbackNode.gain;\n            },\n            set: function(value) {\n                this.feedbackNode.gain.value = value;\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Filter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filter);\n        this.filter.connect(this.output);\n\n        this.frequency = properties.frequency || this.defaults.frequency\n            .value;\n        this.Q = properties.resonance || this.defaults.Q.value;\n        this.filterType = initValue(properties.filterType, this.defaults\n            .filterType\n            .value);\n        this.gain = initValue(properties.gain, this.defaults.gain.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Filter.prototype = Object.create(Super, {\n        name: {\n            value: \"Filter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                frequency: {\n                    value: 800,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                Q: {\n                    value: 1,\n                    min: 0.001,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                gain: {\n                    value: 0,\n                    min: -40,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                filterType: {\n                    value: \"lowpass\",\n                    automatable: false,\n                    type: STRING\n                }\n            }\n        },\n        filterType: {\n            enumerable: true,\n            get: function() {\n                return this.filter.type;\n            },\n            set: function(value) {\n                this.filter.type = value;\n            }\n        },\n        Q: {\n            enumerable: true,\n            get: function() {\n                return this.filter.Q;\n            },\n            set: function(value) {\n                this.filter.Q.value = value;\n            }\n        },\n        gain: {\n            enumerable: true,\n            get: function() {\n                return this.filter.gain;\n            },\n            set: function(value) {\n                this.filter.gain.value = value;\n            }\n        },\n        frequency: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.MoogFilter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize\n            .value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize,\n            1,\n            1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var in1, in2, in3, in4, out1, out2, out3, out4;\n        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n        var input, output, f, fb, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n                output = e.outputBuffer.getChannelData(0),\n                f = this.cutoff * 1.16,\n                inputFactor = 0.35013 * (f * f) * (f * f);\n            fb = this.resonance * (1.0 - 0.15 * f * f);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                input[i] -= out4 * fb;\n                input[i] *= inputFactor;\n                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n                in1 = input[i];\n                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n                in2 = out1;\n                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n                in3 = out2;\n                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n                in4 = out3;\n                output[i] = out4;\n            }\n        };\n\n        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff\n            .value);\n        this.resonance = initValue(properties.resonance, this.defaults.resonance\n            .value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n        name: {\n            value: \"MoogFilter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                cutoff: {\n                    value: 0.065,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 3.5,\n                    min: 0.0,\n                    max: 4.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.processor.cutoff;\n            },\n            set: function(value) {\n                this.processor.cutoff = value;\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this.processor.resonance;\n            },\n            set: function(value) {\n                this.processor.resonance = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Overdrive = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.inputDrive = userContext.createGain();\n        this.waveshaper = userContext.createWaveShaper();\n        this.outputDrive = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.inputDrive);\n        this.inputDrive.connect(this.waveshaper);\n        this.waveshaper.connect(this.outputDrive);\n        this.outputDrive.connect(this.output);\n\n        this.ws_table = new Float32Array(this.k_nSamples);\n        this.drive = initValue(properties.drive, this.defaults.drive.value);\n        this.outputGain = initValue(properties.outputGain, this.defaults\n            .outputGain\n            .value);\n        this.curveAmount = initValue(properties.curveAmount, this.defaults\n            .curveAmount\n            .value);\n        this.algorithmIndex = initValue(properties.algorithmIndex, this\n            .defaults\n            .algorithmIndex.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n        name: {\n            value: \"Overdrive\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                drive: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                outputGain: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                curveAmount: {\n                    value: 0.725,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                algorithmIndex: {\n                    value: 0,\n                    min: 0,\n                    max: 5,\n                    automatable: false,\n                    type: INT\n                }\n            }\n        },\n        k_nSamples: {\n            value: 8192\n        },\n        drive: {\n            get: function() {\n                return this.inputDrive.gain;\n            },\n            set: function(value) {\n                this._drive = value;\n            }\n        },\n        curveAmount: {\n            get: function() {\n                return this._curveAmount;\n            },\n            set: function(value) {\n                this._curveAmount = value;\n                if (this._algorithmIndex === undefined) {\n                    this._algorithmIndex = 0;\n                }\n                this.waveshaperAlgorithms[this._algorithmIndex]\n                    (this._curveAmount,\n                        this.k_nSamples, this.ws_table);\n                this.waveshaper.curve = this.ws_table;\n            }\n        },\n        outputGain: {\n            get: function() {\n                return this.outputDrive.gain;\n            },\n            set: function(value) {\n                this._outputGain = dbToWAVolume(value);\n            }\n        },\n        algorithmIndex: {\n            get: function() {\n                return this._algorithmIndex;\n            },\n            set: function(value) {\n                this._algorithmIndex = value;\n                this.curveAmount = this._curveAmount;\n            }\n        },\n        waveshaperAlgorithms: {\n            value: [\n                function(amount, n_samples, ws_table) {\n                    amount = Math.min(amount, 0.9999);\n                    var k = 2 * amount / (1 - amount),\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n                        ws_table[i] = tanh(y);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, a = 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n                        ws_table[i] = tanh(y * 2);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        abx = Math.abs(x);\n                        if (abx < a) y = abx;\n                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n                        else if (abx > 1) y = abx;\n                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n                    }\n                },\n                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n                    var i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        if (x < -0.08905) {\n                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) -\n                                0.032847)) + 0.01;\n                        } else if (x >= -0.08905 && x < 0.320018) {\n                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n                        } else {\n                            ws_table[i] = 0.630035;\n                        }\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var a = 2 + Math.round(amount * 14),\n                        // we go from 2 to 16 bits, keep in mind for the UI\n                        bits = Math.round(Math.pow(2, a - 1)),\n                        // real number of quantization steps divided by 2\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = Math.round(x * bits) / bits;\n                    }\n                }\n            ]\n        }\n    });\n\n    Tuna.prototype.Phaser = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n        this.filtersL = [];\n        this.filtersR = [];\n        this.feedbackGainNodeL = userContext.createGain();\n        this.feedbackGainNodeR = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.filteredSignal = userContext.createGain();\n        this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.filtersL,\n            callback: this.callback\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.filtersR,\n            callback: this.callback\n        });\n\n        var i = this.stage;\n        while (i--) {\n            this.filtersL[i] = userContext.createBiquadFilter();\n            this.filtersR[i] = userContext.createBiquadFilter();\n            this.filtersL[i].type = \"allpass\";\n            this.filtersR[i].type = \"allpass\";\n        }\n        this.input.connect(this.splitter);\n        this.input.connect(this.output);\n        this.splitter.connect(this.filtersL[0], 0, 0);\n        this.splitter.connect(this.filtersR[0], 1, 0);\n        this.connectInOrder(this.filtersL);\n        this.connectInOrder(this.filtersR);\n        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n        this.feedbackGainNodeL.connect(this.filtersL[0]);\n        this.feedbackGainNodeR.connect(this.filtersR[0]);\n        this.merger.connect(this.output);\n\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n        name: {\n            value: \"Phaser\"\n        },\n        stage: {\n            value: 4\n        },\n        defaults: {\n            writable: true,\n            value: {\n                rate: {\n                    value: 0.1,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.6,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 40,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                baseModulationFrequency: {\n                    value: 700,\n                    min: 500,\n                    max: 1500,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        callback: {\n            value: function(filters, value) {\n                for (var stage = 0; stage < 4; stage++) {\n                    filters[stage].frequency.value = value;\n                }\n            }\n        },\n        depth: {\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n            }\n        },\n        rate: {\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        baseModulationFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseModulationFrequency;\n            },\n            set: function(value) {\n                this._baseModulationFrequency = value;\n                this.lfoL.offset = this._baseModulationFrequency;\n                this.lfoR.offset = this._baseModulationFrequency;\n                this._depth = this._depth;\n            }\n        },\n        feedback: {\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeL.gain.value = this._feedback;\n                this.feedbackGainNodeR.gain.value = this._feedback;\n            }\n        },\n        stereoPhase: {\n            get: function() {\n                return this._stereoPhase;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase *\n                    Math.PI /\n                    180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR._phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.PingPongDelay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.wetLevel = userContext.createGain();\n        this.stereoToMonoMix = userContext.createGain();\n        this.feedbackLevel = userContext.createGain();\n        this.output = userContext.createGain();\n        this.delayLeft = userContext.createDelay();\n        this.delayRight = userContext.createDelay();\n\n        this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.merger = userContext.createChannelMerger(2);\n\n        this.activateNode.connect(this.splitter);\n        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n        this.stereoToMonoMix.gain.value = .5;\n        this.stereoToMonoMix.connect(this.wetLevel);\n        this.wetLevel.connect(this.delayLeft);\n        this.feedbackLevel.connect(this.delayLeft);\n        this.delayLeft.connect(this.delayRight);\n        this.delayRight.connect(this.feedbackLevel);\n        this.delayLeft.connect(this.merger, 0, 0);\n        this.delayRight.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n        this.activateNode.connect(this.output);\n\n        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n        name: {\n            value: \"PingPongDelay\"\n        },\n        delayTimeLeft: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeLeft;\n            },\n            set: function(value) {\n                this._delayTimeLeft = value;\n                this.delayLeft.delayTime.value = value / 1000;\n            }\n        },\n        delayTimeRight: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeRight;\n            },\n            set: function(value) {\n                this._delayTimeRight = value;\n                this.delayRight.delayTime.value = value / 1000;\n            }\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTimeLeft: {\n                    value: 200,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                delayTimeRight: {\n                    value: 400,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                feedback: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        }\n    });\n\n    Tuna.prototype.Tremolo = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(\n                2),\n            this.amplitudeL = userContext.createGain(), this.amplitudeR =\n            userContext.createGain(), this.merger = userContext.createChannelMerger(\n                2), this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.amplitudeL.gain,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.amplitudeR.gain,\n            callback: pipe\n        });\n\n        this.input.connect(this.splitter);\n        this.splitter.connect(this.amplitudeL, 0);\n        this.splitter.connect(this.amplitudeR, 1);\n        this.amplitudeL.connect(this.merger, 0, 0);\n        this.amplitudeR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.rate = properties.rate || this.defaults.rate.value;\n        this.intensity = initValue(properties.intensity, this.defaults.intensity\n            .value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults\n            .stereoPhase\n            .value);\n\n        this.lfoL.offset = 1 - (this.intensity / 2);\n        this.lfoR.offset = 1 - (this.intensity / 2);\n        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n        name: {\n            value: \"Tremolo\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                intensity: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 0,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 5,\n                    min: 0.1,\n                    max: 11,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        intensity: {\n            enumerable: true,\n            get: function() {\n                return this._intensity;\n            },\n            set: function(value) {\n                this._intensity = value;\n                this.lfoL.offset = 1 - this._intensity / 2;\n                this.lfoR.offset = 1 - this._intensity / 2;\n                this.lfoL.oscillation = this._intensity;\n                this.lfoR.oscillation = this._intensity;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        stereoPhase: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase *\n                    Math.PI /\n                    180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR.phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.WahWah = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.envelopeFollower = new userInstance.EnvelopeFollower({\n            target: this,\n            callback: function(context, value) {\n                context.sweep = value;\n            }\n        });\n        this.filterBp = userContext.createBiquadFilter();\n        this.filterPeaking = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        //Connect AudioNodes\n        this.activateNode.connect(this.filterBp);\n        this.filterBp.connect(this.filterPeaking);\n        this.filterPeaking.connect(this.output);\n\n        //Set Properties\n        this.init();\n        this.automode = initValue(properties.enableAutoMode, this.defaults\n            .automode\n            .value);\n        this.resonance = properties.resonance || this.defaults.resonance\n            .value;\n        this.sensitivity = initValue(properties.sensitivity, this.defaults\n            .sensitivity\n            .value);\n        this.baseFrequency = initValue(properties.baseFrequency, this.defaults\n            .baseFrequency\n            .value);\n        this.excursionOctaves = properties.excursionOctaves || this.defaults\n            .excursionOctaves\n            .value;\n        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\n        this.activateNode.gain.value = 2;\n        this.envelopeFollower.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n        name: {\n            value: \"WahWah\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                automode: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                baseFrequency: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                excursionOctaves: {\n                    value: 2,\n                    min: 1,\n                    max: 6,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sweep: {\n                    value: 0.2,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 10,\n                    min: 1,\n                    max: 100,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sensitivity: {\n                    value: 0.5,\n                    min: -1,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        activateCallback: {\n            value: function(value) {\n                this.automode = value;\n            }\n        },\n        automode: {\n            get: function() {\n                return this._automode;\n            },\n            set: function(value) {\n                this._automode = value;\n                if (value) {\n                    this.activateNode.connect(this.envelopeFollower.input);\n                    this.envelopeFollower.activate(true);\n                } else {\n                    this.envelopeFollower.activate(false);\n                    this.activateNode.disconnect();\n                    this.activateNode.connect(this.filterBp);\n                }\n            }\n        },\n        filterFreqTimeout: {\n            value: 0\n        },\n        setFilterFreq: {\n            value: function() {\n                try {\n                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                } catch (e) {\n                    clearTimeout(this.filterFreqTimeout);\n                    //put on the next cycle to let all init properties be set\n                    this.filterFreqTimeout = setTimeout(function() {\n                        this.setFilterFreq();\n                    }.bind(this), 0);\n                }\n            }\n        },\n        sweep: {\n            enumerable: true,\n            get: function() {\n                return this._sweep.value;\n            },\n            set: function(value) {\n                this._sweep = Math.pow(value > 1 ? 1 : value <\n                    0 ? 0 :\n                    value,\n                    this._sensitivity);\n                this.setFilterFreq();\n            }\n        },\n        baseFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseFrequency;\n            },\n            set: function(value) {\n                this._baseFrequency = 50 * Math.pow(10, value *\n                    2);\n                this._excursionFrequency = Math.min(userContext\n                    .sampleRate /\n                    2,\n                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n                );\n                this.setFilterFreq();\n            }\n        },\n        excursionOctaves: {\n            enumerable: true,\n            get: function() {\n                return this._excursionOctaves;\n            },\n            set: function(value) {\n                this._excursionOctaves = value;\n                this._excursionFrequency = Math.min(userContext\n                    .sampleRate /\n                    2,\n                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n                );\n                this.setFilterFreq();\n            }\n        },\n        sensitivity: {\n            enumerable: true,\n            get: function() {\n                return this._sensitivity;\n            },\n            set: function(value) {\n                this._sensitivity = Math.pow(10, value);\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this._resonance;\n            },\n            set: function(value) {\n                this._resonance = value;\n                this.filterPeaking.Q = this._resonance;\n            }\n        },\n        init: {\n            value: function() {\n                this.output.gain.value = 1;\n                this.filterPeaking.type = \"peaking\";\n                this.filterBp.type = \"bandpass\";\n                this.filterPeaking.frequency.value = 100;\n                this.filterPeaking.gain.value = 20;\n                this.filterPeaking.Q.value = 5;\n                this.filterBp.frequency.value = 100;\n                this.filterBp.Q.value = 1;\n            }\n        }\n    });\n\n    Tuna.prototype.EnvelopeFollower = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.jsNode = this.output = userContext.createScriptProcessor(\n            this.buffersize,\n            1, 1);\n\n        this.input.connect(this.output);\n\n        this.attackTime = initValue(properties.attackTime, this.defaults\n            .attackTime\n            .value);\n        this.releaseTime = initValue(properties.releaseTime, this.defaults\n            .releaseTime\n            .value);\n        this._envelope = 0;\n        this.target = properties.target || {};\n        this.callback = properties.callback || function() {};\n    };\n    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n        name: {\n            value: \"EnvelopeFollower\"\n        },\n        defaults: {\n            value: {\n                attackTime: {\n                    value: 0.003,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                },\n                releaseTime: {\n                    value: 0.5,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        buffersize: {\n            value: 256\n        },\n        envelope: {\n            value: 0\n        },\n        sampleRate: {\n            value: 44100\n        },\n        attackTime: {\n            enumerable: true,\n            get: function() {\n                return this._attackTime;\n            },\n            set: function(value) {\n                this._attackTime = value;\n                this._attackC = Math.exp(-1 / this._attackTime *\n                    this.sampleRate /\n                    this.buffersize);\n            }\n        },\n        releaseTime: {\n            enumerable: true,\n            get: function() {\n                return this._releaseTime;\n            },\n            set: function(value) {\n                this._releaseTime = value;\n                this._releaseC = Math.exp(-1 / this._releaseTime *\n                    this.sampleRate /\n                    this.buffersize);\n            }\n        },\n        callback: {\n            get: function() {\n                return this._callback;\n            },\n            set: function(value) {\n                if (typeof value === \"function\") {\n                    this._callback = value;\n                } else {\n                    console.error(\"tuna.js: \" + this.name +\n                        \": Callback must be a function!\");\n                }\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                this.activated = doActivate;\n                if (doActivate) {\n                    this.jsNode.connect(userContext.destination);\n                    this.jsNode.onaudioprocess = this.returnCompute(\n                        this);\n                } else {\n                    this.jsNode.disconnect();\n                    this.jsNode.onaudioprocess = null;\n                }\n            }\n        },\n        returnCompute: {\n            value: function(instance) {\n                return function(event) {\n                    instance.compute(event);\n                };\n            }\n        },\n        compute: {\n            value: function(event) {\n                var count = event.inputBuffer.getChannelData(0)\n                    .length,\n                    channels = event.inputBuffer.numberOfChannels,\n                    current, chan, rms, i;\n                chan = rms = i = 0;\n                if (channels > 1) { //need to mixdown\n                    for (i = 0; i < count; ++i) {\n                        for (; chan < channels; ++chan) {\n                            current = event.inputBuffer.getChannelData(chan)[i];\n                            rms += (current * current) / channels;\n                        }\n                    }\n                } else {\n                    for (i = 0; i < count; ++i) {\n                        current = event.inputBuffer.getChannelData(0)[i];\n                        rms += (current * current);\n                    }\n                }\n                rms = Math.sqrt(rms);\n\n                if (this._envelope < rms) {\n                    this._envelope *= this._attackC;\n                    this._envelope += (1 - this._attackC) * rms;\n                } else {\n                    this._envelope *= this._releaseC;\n                    this._envelope += (1 - this._releaseC) *\n                        rms;\n                }\n                this._callback(this._target, this._envelope);\n            }\n        }\n    });\n\n    Tuna.prototype.LFO = function(properties) {\n        //Instantiate AudioNode\n        this.output = userContext.createScriptProcessor(256, 1, 1);\n        this.activateNode = userContext.destination;\n\n        //Set Properties\n        this.frequency = initValue(properties.frequency, this.defaults.frequency\n            .value);\n        this.offset = initValue(properties.offset, this.defaults.offset.value);\n        this.oscillation = initValue(properties.oscillation, this.defaults\n            .oscillation\n            .value);\n        this.phase = initValue(properties.phase, this.defaults.phase.value);\n        this.target = properties.target || {};\n        this.output.onaudioprocess = this.callback(properties.callback ||\n            function() {});\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.LFO.prototype = Object.create(Super, {\n        name: {\n            value: \"LFO\"\n        },\n        bufferSize: {\n            value: 256\n        },\n        sampleRate: {\n            value: 44100\n        },\n        defaults: {\n            value: {\n                frequency: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: false,\n                    type: FLOAT\n                },\n                offset: {\n                    value: 0.85,\n                    min: 0,\n                    max: 22049,\n                    automatable: false,\n                    type: FLOAT\n                },\n                oscillation: {\n                    value: 0.3,\n                    min: -22050,\n                    max: 22050,\n                    automatable: false,\n                    type: FLOAT\n                },\n                phase: {\n                    value: 0,\n                    min: 0,\n                    max: 2 * Math.PI,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        frequency: {\n            get: function() {\n                return this._frequency;\n            },\n            set: function(value) {\n                this._frequency = value;\n                this._phaseInc = 2 * Math.PI * this._frequency *\n                    this.bufferSize /\n                    this.sampleRate;\n            }\n        },\n        offset: {\n            get: function() {\n                return this._offset;\n            },\n            set: function(value) {\n                this._offset = value;\n            }\n        },\n        oscillation: {\n            get: function() {\n                return this._oscillation;\n            },\n            set: function(value) {\n                this._oscillation = value;\n            }\n        },\n        phase: {\n            get: function() {\n                return this._phase;\n            },\n            set: function(value) {\n                this._phase = value;\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                if (!doActivate) {\n                    this.output.disconnect(userContext.destination);\n                } else {\n                    this.output.connect(userContext.destination);\n                }\n            }\n        },\n        callback: {\n            value: function(callback) {\n                var that = this;\n                return function() {\n                    that._phase += that._phaseInc;\n                    if (that._phase > 2 * Math.PI) {\n                        that._phase = 0;\n                    }\n                    callback(that._target, that._offset +\n                        that._oscillation *\n                        Math.sin(that._phase));\n                };\n            }\n        }\n    });\n\n    Tuna.toString = Tuna.prototype.toString = function() {\n        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n    };\n})(this);\n\n},{}],26:[function(require,module,exports){\n(function (global){\n!function e(t,n,i){function s(a,r){if(!n[a]){if(!t[a]){var c=\"function\"==typeof require&&require;if(!r&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error(\"Cannot find module '\"+a+\"'\");throw u.code=\"MODULE_NOT_FOUND\",u}var f=n[a]={exports:{}};t[a][0].call(f.exports,function(e){var n=t[a][1][e];return s(n?n:e)},f,f.exports,e,t,n,i)}return n[a].exports}for(var o=\"function\"==typeof require&&require,a=0;a<i.length;a++)s(i[a]);return s}({1:[function(e,t,n){function i(){f=!1,r.length?u=r.concat(u):l=-1,u.length&&s()}function s(){if(!f){var e=setTimeout(i);f=!0;for(var t=u.length;t;){for(r=u,u=[];++l<t;)r&&r[l].run();l=-1,t=u.length}r=null,f=!1,clearTimeout(e)}}function o(e,t){this.fun=e,this.array=t}function a(){}var r,c=t.exports={},u=[],f=!1,l=-1;c.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new o(e,t)),1!==u.length||f||setTimeout(s,0)},o.prototype.run=function(){this.fun.apply(null,this.array)},c.title=\"browser\",c.browser=!0,c.env={},c.argv=[],c.version=\"\",c.versions={},c.on=a,c.addListener=a,c.once=a,c.off=a,c.removeListener=a,c.removeAllListeners=a,c.emit=a,c.binding=function(e){throw new Error(\"process.binding is not supported\")},c.cwd=function(){return\"/\"},c.chdir=function(e){throw new Error(\"process.chdir is not supported\")},c.umask=function(){return 0}},{}],2:[function(e,t,n){\"use strict\";function i(e){var t=\"jazz_\"+r++ +Date.now(),n=void 0,i=void 0,s=void 0;if(o.getDevice().nodejs===!0)i=new jazzMidi.MIDI;else{var u=document.createElement(\"object\");u.id=t+\"ie\",u.classid=\"CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90\",s=u;var f=document.createElement(\"object\");f.id=t,f.type=\"audio/x-jazz\",u.appendChild(f),i=f;var l=document.createElement(\"p\");l.appendChild(document.createTextNode(\"This page requires the \"));var d=document.createElement(\"a\");d.appendChild(document.createTextNode(\"Jazz plugin\")),d.href=\"http://jazz-soft.net/\",l.appendChild(d),l.appendChild(document.createTextNode(\".\")),f.appendChild(l);var h=document.getElementById(\"MIDIPlugin\");h||(h=document.createElement(\"div\"),h.id=\"MIDIPlugin\",h.style.position=\"absolute\",h.style.visibility=\"hidden\",h.style.left=\"-9999px\",h.style.top=\"-9999px\",document.body.appendChild(h)),h.appendChild(u)}setTimeout(function(){i.isJazz===!0?n=i:s.isJazz===!0&&(n=s),void 0!==n&&(n._perfTimeZero=performance.now(),c.set(t,n)),e(n)},a)}function s(e,t){var n=null,s=\"input\"===e?\"inputInUse\":\"outputInUse\",o=!0,a=!1,r=void 0;try{for(var u,f=c.values()[Symbol.iterator]();!(o=(u=f.next()).done);o=!0){var l=u.value;if(l[s]!==!0){n=l;break}}}catch(d){a=!0,r=d}finally{try{!o&&f[\"return\"]&&f[\"return\"]()}finally{if(a)throw r}}null===n?i(t):t(n)}Object.defineProperty(n,\"__esModule\",{value:!0}),n.createJazzInstance=i,n.getJazzInstance=s;var o=e(\"./util\"),a=100,r=0,c=new Map},{\"./util\":9}],3:[function(e,t,n){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function s(){return new Promise(function(e,t){return void 0!==I?void e(I):\"ie9\"===y.getDevice().browser?void t({message:\"WebMIDIAPIShim supports Internet Explorer 10 and above.\"}):void v.createJazzInstance(function(n){return void 0===n?void t({message:\"No access to MIDI devices: browser does not support the WebMIDI API and the Jazz plugin is not installed.\"}):(_=n,void o(function(){u(),I=new D(w,b),e(I)}))})})}function o(e){var t=_.MidiInList(),n=_.MidiOutList(),i=t.length,s=n.length;a(0,i,\"input\",t,function(){a(0,s,\"output\",n,e)})}function a(e,t,n,i,s){if(t>e){var o=i[e++];r(n,o,function(){a(e,t,n,i,s)})}else s()}function r(e,t,n){v.getJazzInstance(e,function(i){var s=void 0,o=[t,\"\",\"\"];\"input\"===e?(i.Support(\"MidiInInfo\")&&(o=i.MidiInInfo(t)),s=new p.MIDIInput(o,i),w.set(s.id,s)):\"output\"===e&&(i.Support(\"MidiOutInfo\")&&(o=i.MidiOutInfo(t)),s=new m.MIDIOutput(o,i),b.set(s.id,s)),n(s)})}function c(e,t){var n=void 0,i=!0,s=!1,o=void 0;try{for(var a,r=e.values()[Symbol.iterator]();!(i=(a=r.next()).done)&&(n=a.value,n.name!==t);i=!0);}catch(c){s=!0,o=c}finally{try{!i&&r[\"return\"]&&r[\"return\"]()}finally{if(s)throw o}}return n}function u(){_.OnDisconnectMidiIn(function(e){var t=c(w,e);void 0!==t&&(t.state=\"disconnected\",t.close(),t._jazzInstance.inputInUse=!1,w[\"delete\"](t.id),f(t))}),_.OnDisconnectMidiOut(function(e){var t=c(b,e);void 0!==t&&(t.state=\"disconnected\",t.close(),t._jazzInstance.outputInUse=!1,b[\"delete\"](t.id),f(t))}),_.OnConnectMidiIn(function(e){r(\"input\",e,function(e){f(e)})}),_.OnConnectMidiOut(function(e){r(\"output\",e,function(e){f(e)})})}function f(e){e.dispatchEvent(new g.MIDIConnectionEvent(e,e));var t=new g.MIDIConnectionEvent(I,e);\"function\"==typeof I.onstatechange&&I.onstatechange(t);var n=!0,i=!1,s=void 0;try{for(var o,a=z[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var r=o.value;r(t)}}catch(c){i=!0,s=c}finally{try{!n&&a[\"return\"]&&a[\"return\"]()}finally{if(i)throw s}}}function l(){w.forEach(function(e){e._jazzInstance.MidiInClose()})}function d(e,t){var n=void 0;return\"input\"===t?(n=M.get(e),void 0===n&&(n=y.generateUUID(),M.set(e,n))):\"output\"===t&&(n=x.get(e),void 0===n&&(n=y.generateUUID(),x.set(e,n))),n}Object.defineProperty(n,\"__esModule\",{value:!0});var h=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();n.createMIDIAccess=s,n.dispatchEvent=f,n.closeAllMIDIInputs=l,n.getMIDIDeviceId=d;var v=e(\"./jazz_instance\"),p=e(\"./midi_input\"),m=e(\"./midi_output\"),g=e(\"./midiconnection_event\"),y=e(\"./util\"),I=void 0,_=void 0,w=new Map,b=new Map,M=new Map,x=new Map,z=new Set,D=function(){function e(t,n){i(this,e),this.sysexEnabled=!0,this.inputs=t,this.outputs=n}return h(e,[{key:\"addEventListener\",value:function(e,t,n){\"statechange\"===e&&z.has(t)===!1&&z.add(t)}},{key:\"removeEventListener\",value:function(e,t,n){\"statechange\"===e&&z.has(t)===!0&&z[\"delete\"](t)}}]),e}()},{\"./jazz_instance\":2,\"./midi_input\":4,\"./midi_output\":5,\"./midiconnection_event\":6,\"./util\":9}],4:[function(e,t,n){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(n,\"__esModule\",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=e(\"./util\"),a=e(\"./midimessage_event\"),r=(e(\"./midiconnection_event\"),e(\"./midi_access\")),c=void 0,u=o.getDevice().nodejs,f=function(){function e(t,n){i(this,e),this.id=r.getMIDIDeviceId(t[0],\"input\"),this.name=t[0],this.manufacturer=t[1],this.version=t[2],this.type=\"input\",this.state=\"connected\",this.connection=\"pending\",this.onstatechange=null,this._onmidimessage=null,Object.defineProperty(this,\"onmidimessage\",{set:function(e){this._onmidimessage=e,\"function\"==typeof e&&this.open()}}),this._listeners=(new Map).set(\"midimessage\",new Set).set(\"statechange\",new Set),this._inLongSysexMessage=!1,this._sysexBuffer=new Uint8Array,this._jazzInstance=n,this._jazzInstance.inputInUse=!0,\"linux\"===o.getDevice().platform&&this._jazzInstance.MidiInOpen(this.name,c.bind(this))}return s(e,[{key:\"addEventListener\",value:function(e,t,n){var i=this._listeners.get(e);void 0!==i&&i.has(t)===!1&&i.add(t)}},{key:\"removeEventListener\",value:function(e,t,n){var i=this._listeners.get(e);void 0!==i&&i.has(t)===!1&&i[\"delete\"](t)}},{key:\"dispatchEvent\",value:function(e){var t=this._listeners.get(e.type);t.forEach(function(t){t(e)}),\"midimessage\"===e.type?null!==this._onmidimessage&&this._onmidimessage(e):\"statechange\"===e.type&&null!==this.onstatechange&&this.onstatechange(e)}},{key:\"open\",value:function(){\"open\"!==this.connection&&(\"linux\"!==o.getDevice().platform&&this._jazzInstance.MidiInOpen(this.name,c.bind(this)),this.connection=\"open\",r.dispatchEvent(this))}},{key:\"close\",value:function(){\"closed\"!==this.connection&&(\"linux\"!==o.getDevice().platform&&this._jazzInstance.MidiInClose(),this.connection=\"closed\",r.dispatchEvent(this),this._onmidimessage=null,this.onstatechange=null,this._listeners.get(\"midimessage\").clear(),this._listeners.get(\"statechange\").clear())}},{key:\"_appendToSysexBuffer\",value:function(e){var t=this._sysexBuffer.length,n=new Uint8Array(t+e.length);n.set(this._sysexBuffer),n.set(e,t),this._sysexBuffer=n}},{key:\"_bufferLongSysex\",value:function(e,t){for(var n=t;n<e.length;){if(247==e[n])return n++,this._appendToSysexBuffer(e.slice(t,n)),n;n++}return this._appendToSysexBuffer(e.slice(t,n)),this._inLongSysexMessage=!0,n}}]),e}();n.MIDIInput=f,c=function(e,t){var n=0,i=void 0,s=!1;for(i=0;i<t.length;i+=n){var o=!0;if(this._inLongSysexMessage){if(i=this._bufferLongSysex(t,i),247!=t[i-1])return;s=!0}else switch(s=!1,240&t[i]){case 0:n=1,o=!1;break;case 128:case 144:case 160:case 176:case 224:n=3;break;case 192:case 208:n=2;break;case 240:switch(t[i]){case 240:if(i=this._bufferLongSysex(t,i),247!=t[i-1])return;s=!0;break;case 241:case 243:n=2;break;case 242:n=3;break;default:n=1}}if(o){var r={};if(r.receivedTime=parseFloat(e.toString())+this._jazzInstance._perfTimeZero,s||this._inLongSysexMessage?(r.data=new Uint8Array(this._sysexBuffer),this._sysexBuffer=new Uint8Array(0),this._inLongSysexMessage=!1):r.data=new Uint8Array(t.slice(i,n+i)),u)this._onmidimessage&&this._onmidimessage(r);else{var c=new a.MIDIMessageEvent(this,r.data,r.receivedTime);this.dispatchEvent(c)}}}}},{\"./midi_access\":3,\"./midiconnection_event\":6,\"./midimessage_event\":7,\"./util\":9}],5:[function(e,t,n){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(n,\"__esModule\",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=e(\"./util\"),a=e(\"./midi_access\"),r=function(){function e(t,n){i(this,e),this.id=a.getMIDIDeviceId(t[0],\"output\"),this.name=t[0],this.manufacturer=t[1],this.version=t[2],this.type=\"output\",this.state=\"connected\",this.connection=\"pending\",this.onmidimessage=null,this.onstatechange=null,this._listeners=new Set,this._inLongSysexMessage=!1,this._sysexBuffer=new Uint8Array,this._jazzInstance=n,this._jazzInstance.outputInUse=!0,\"linux\"===o.getDevice().platform&&this._jazzInstance.MidiOutOpen(this.name)}return s(e,[{key:\"open\",value:function(){\"open\"!==this.connection&&(\"linux\"!==o.getDevice().platform&&this._jazzInstance.MidiOutOpen(this.name),this.connection=\"open\",a.dispatchEvent(this))}},{key:\"close\",value:function(){\"closed\"!==this.connection&&(\"linux\"!==o.getDevice().platform&&this._jazzInstance.MidiOutClose(),this.connection=\"closed\",a.dispatchEvent(this),this.onstatechange=null,this._listeners.clear())}},{key:\"send\",value:function(e,t){var n=this,i=0;return 0===e.length?!1:(t&&(i=Math.floor(t-performance.now())),t&&i>1?setTimeout(function(){n._jazzInstance.MidiOutLong(e)},i):this._jazzInstance.MidiOutLong(e),!0)}},{key:\"clear\",value:function(){}},{key:\"addEventListener\",value:function(e,t,n){\"statechange\"===e&&this._listeners.has(t)===!1&&this._listeners.add(t)}},{key:\"removeEventListener\",value:function(e,t,n){\"statechange\"===e&&this._listeners.has(t)===!1&&this._listeners[\"delete\"](t)}},{key:\"dispatchEvent\",value:function(e){this._listeners.forEach(function(t){t(e)}),null!==this.onstatechange&&this.onstatechange(e)}}]),e}();n.MIDIOutput=r},{\"./midi_access\":3,\"./util\":9}],6:[function(e,t,n){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(n,\"__esModule\",{value:!0});var s=function o(e,t){i(this,o),this.bubbles=!1,this.cancelBubble=!1,this.cancelable=!1,this.currentTarget=e,this.defaultPrevented=!1,this.eventPhase=0,this.path=[],this.port=t,this.returnValue=!0,this.srcElement=e,this.target=e,this.timeStamp=Date.now(),this.type=\"statechange\"};n.MIDIConnectionEvent=s},{}],7:[function(e,t,n){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(n,\"__esModule\",{value:!0});var s=function o(e,t,n){i(this,o),this.bubbles=!1,this.cancelBubble=!1,this.cancelable=!1,this.currentTarget=e,this.data=t,this.defaultPrevented=!1,this.eventPhase=0,this.path=[],this.receivedTime=n,this.returnValue=!0,this.srcElement=e,this.target=e,this.timeStamp=Date.now(),this.type=\"midimessage\"};n.MIDIMessageEvent=s},{}],8:[function(e,t,n){\"use strict\";var i=e(\"./midi_access\"),s=e(\"./util\"),o=void 0;!function(){navigator.requestMIDIAccess||(s.polyfill(),navigator.requestMIDIAccess=function(){return void 0===o&&(o=i.createMIDIAccess()),o},s.getDevice().nodejs===!0&&(navigator.close=function(){i.closeAllMIDIInputs()}))}()},{\"./midi_access\":3,\"./util\":9}],9:[function(e,t,n){(function(e,t){\"use strict\";function i(){if(void 0!==c)return c;var t=\"undetected\",n=\"undetected\";if(navigator.nodejs)return t=e.platform,c={platform:t,nodejs:!0,mobile:\"ios\"===t||\"android\"===t};var i=navigator.userAgent;return i.match(/(iPad|iPhone|iPod)/g)?t=\"ios\":-1!==i.indexOf(\"Android\")?t=\"android\":-1!==i.indexOf(\"Linux\")?t=\"linux\":-1!==i.indexOf(\"Macintosh\")?t=\"osx\":-1!==i.indexOf(\"Windows\")&&(t=\"windows\"),-1!==i.indexOf(\"Chrome\")?(n=\"chrome\",-1!==i.indexOf(\"OPR\")?n=\"opera\":-1!==i.indexOf(\"Chromium\")&&(n=\"chromium\")):-1!==i.indexOf(\"Safari\")?n=\"safari\":-1!==i.indexOf(\"Firefox\")?n=\"firefox\":-1!==i.indexOf(\"Trident\")&&(n=\"ie\",-1!==i.indexOf(\"MSIE 9\")&&(n=\"ie9\")),\"ios\"===t&&-1!==i.indexOf(\"CriOS\")&&(n=\"chrome\"),c={platform:t,browser:n,mobile:\"ios\"===t||\"android\"===t,nodejs:!1}}function s(){void 0===performance&&(performance={}),Date.now=Date.now||function(){return(new Date).getTime()},void 0===performance.now&&!function(){var e=Date.now();void 0!==performance.timing&&void 0!==performance.timing.navigationStart&&(e=performance.timing.navigationStart),performance.now=function(){return Date.now()-e}}()}function o(){var e=(new Date).getTime(),t=new Array(64).join(\"x\");return t=t.replace(/[xy]/g,function(t){var n=(e+16*Math.random())%16|0;return e=Math.floor(e/16),(\"x\"==t?n:3&n|8).toString(16).toUpperCase()})}function a(e){\"function\"!=typeof e.Promise&&(e.Promise=function(e){this.executor=e},e.Promise.prototype.then=function(e,t){\"function\"!=typeof e&&(e=function(){}),\"function\"!=typeof t&&(t=function(){}),this.executor(e,t)})}function r(){var e=i();\"ie\"===e.browser?a(window):e.nodejs===!0&&a(t),s()}Object.defineProperty(n,\"__esModule\",{value:!0}),n.getDevice=i,n.polyfillPerformance=s,n.generateUUID=o,n.polyfillPromise=a,n.polyfill=r;var c=void 0}).call(this,e(\"_process\"),\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{_process:1}]},{},[8]);\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],27:[function(require,module,exports){\nmodule.exports={\n  \"Piano\": {\n    \"Acoustic Grand Piano\": 0,\n    \"Bright Acoustic Piano\": 1,\n    \"Electric Grand Piano\": 2,\n    \"Honky-tonk Piano\": 3,\n    \"Electric Piano 1\": 4,\n    \"Electric Piano 2\": 5,\n    \"Harpsichord\":6,\n    \"Clavinet\": 7\n  },\n  \"Chromatic Percussion\": {\n    \"Celesta\": 8,\n    \"Glockenspiel\": 9,\n    \"Music Box\": 10,\n    \"Vibraphone\": 11,\n    \"Marimba\": 12,\n    \"Xylophone\": 13,\n    \"Tubular Bells\": 14,\n    \"Dulcimer\": 15\n  },\n  \"Organ\": {\n    \"Drawbar Organ\": 16,\n    \"Percussive Organ\": 17,\n    \"Rock Organ\": 18,\n    \"Church Organ\": 19,\n    \"Reed Organ\": 20,\n    \"Accordion\": 21,\n    \"Harmonica\": 22,\n    \"Tango Accordion\": 23\n  },\n  \"Guitar\": {\n    \"Acoustic Guitar (nylon)\": 24,\n    \"Acoustic Guitar (steel)\": 25,\n    \"Electric Guitar (jazz)\": 26,\n    \"Electric Guitar (clean)\": 27,\n    \"Electric Guitar (muted)\": 28,\n    \"Overdriven Guitar\": 29,\n    \"Distortion Guitar\": 30,\n    \"Guitar Harmonics\": 31\n  },\n  \"Bass\": {\n    \"Acoustic Bass\": 32,\n    \"Electric Bass (finger)\": 33,\n    \"Electric Bass (pick)\": 34,\n    \"Fretless Bass\": 35,\n    \"Slap Bass 1\": 36,\n    \"Slap Bass 2\": 37,\n    \"Synth Bass 1\": 38,\n    \"Synth Bass 2\": 39\n  },\n  \"Strings\": {\n    \"Violin\": 40,\n    \"Viola\": 41,\n    \"Cello\": 42,\n    \"Contrabass\": 43,\n    \"Tremolo Strings\": 44,\n    \"Pizzicato Strings\": 45,\n    \"Orchestral Harp\": 46,\n    \"Timpani\": 47\n  },\n  \"Brass\": {\n    \"Trumpet\": 56,\n    \"Trombone\": 57,\n    \"Tuba\": 58,\n    \"Muted Trumpet\": 59,\n    \"French Horn\": 60,\n    \"Brass Section\": 61,\n    \"Synth Brass 1\": 62,\n    \"Synth Brass 2\": 63\n  },\n  \"Reed\": {\n    \"Soprano Sax\": 64,\n    \"Alto Sax\": 65,\n    \"Tenor Sax\": 66,\n    \"Baritone Sax\": 67,\n    \"Oboe\": 68,\n    \"English Horn\": 69,\n    \"Bassoon\": 70,\n    \"Clarinet\": 71\n  },\n  \"Pipe\": {\n    \"Piccolo\": 72,\n    \"Flute\": 73,\n    \"Recorder\": 74,\n    \"Pan Flute\": 75,\n    \"Blown Bottle\": 76,\n    \"Shakuhachi\": 77,\n    \"Whistle\": 78,\n    \"Ocarina\": 79\n  },\n  \"Synth Lead\": {\n    \"Lead 1 (square)\": 80,\n    \"Lead 2 (sawtooth)\": 81,\n    \"Lead 3 (calliope)\": 82,\n    \"Lead 4 (chiff)\": 83,\n    \"Lead 5 (charang)\": 84,\n    \"Lead 6 (voice)\": 85,\n    \"Lead 7 (fifths)\": 86,\n    \"Lead 8 (bass + lead)\": 87\n  },\n  \"Synth Pad\": {\n    \"Pad 1 (new age)\": 88,\n    \"Pad 2 (warm)\": 89,\n    \"Pad 3 (polysynth)\": 90,\n    \"Pad 4 (choir)\": 91,\n    \"Pad 5 (bowed)\": 92,\n    \"Pad 6 (metallic)\": 93,\n    \"Pad 7 (halo)\": 94,\n    \"Pad 8 (sweep)\": 95\n  },\n  \"Synth Effects\": {\n    \"FX 1 (rain)\": 96,\n    \"FX 2 (soundtrack)\": 97,\n    \"FX 3 (crystal)\": 98,\n    \"FX 4 (atmosphere)\": 99,\n    \"FX 5 (brightness)\": 100,\n    \"FX 6 (goblins)\": 101,\n    \"FX 7 (echoes)\": 102,\n    \"FX 8 (sci-fi)\": 103\n  },\n  \"Ethnic\": {\n    \"Sitar\": 104,\n    \"Banjo\": 105,\n    \"Shamisen\": 106,\n    \"Koto\": 107,\n    \"Kalimba\": 108,\n    \"Bagpipe\": 109,\n    \"Fiddle\": 110,\n    \"Shanai\": 111\n  },\n  \"Percussive\": {\n    \"Tinkle Bell\": 112,\n    \"Agogo\": 113,\n    \"Steel Drums\": 114,\n    \"Woodblock\": 115,\n    \"Taiko Drum\": 116,\n    \"Melodic Tom\": 117,\n    \"Synth Drum\": 118\n  },\n  \"Sound effects\": {\n    \"Reverse Cymbal\": 119,\n    \"Guitar Fret Noise\": 120,\n    \"Breath Noise\": 121,\n    \"Seashore\": 122,\n    \"Bird Tweet\": 123,\n    \"Telephone Ring\": 124,\n    \"Helicopter\": 125,\n    \"Applause\": 126,\n    \"Gunshot\": 127\n  },\n  \"Percussion\": {\n    \"Bass Drum 2\": 35,\n    \"Bass Drum 1\": 36,\n    \"Side Stick/Rimshot\": 37,\n    \"Snare Drum 1\": 38,\n    \"Hand Clap\": 39,\n    \"Snare Drum 2\": 40,\n    \"Low Tom 2\": 41,\n    \"Closed Hi-hat\": 42,\n    \"Low Tom 1\": 43,\n    \"Pedal Hi-hat\": 44,\n    \"Mid Tom 2\": 45,\n    \"Open Hi-hat\": 46,\n    \"Mid Tom 1\": 47,\n    \"High Tom 2\": 48,\n    \"Crash Cymbal 1\": 49,\n    \"High Tom 1\": 50,\n    \"Ride Cymbal 1\": 51,\n    \"Chinese Cymbal\": 52,\n    \"Ride Bell\": 53,\n    \"Tambourine\": 54,\n    \"Splash Cymbal\": 55,\n    \"Cowbell\": 56,\n    \"Crash Cymbal 2\": 57,\n    \"Vibra Slap\": 58,\n    \"Ride Cymbal 2\": 59,\n    \"High Bongo\": 60,\n    \"Low Bongo\": 61,\n    \"Mute High Conga\": 62,\n    \"Open High Conga\": 63,\n    \"Low Conga\": 64,\n    \"High Timbale\": 65,\n    \"Low Timbale\": 66,\n    \"High Agogô\": 67,\n    \"Low Agogô\": 68,\n    \"Cabasa\": 69,\n    \"Maracas\": 70,\n    \"Short Whistle\": 71,\n    \"Long Whistle\": 72,\n    \"Short Güiro\": 73,\n    \"Long Güiro\": 74,\n    \"Claves\": 75,\n    \"High Wood Block\": 76,\n    \"Low Wood Block\": 77,\n    \"Mute Cuíca\": 78,\n    \"Open Cuíca\": 79,\n    \"Mute Triangle\": 80,\n    \"Open Triangle\": 81\n  }\n}\n\n},{}],28:[function(require,module,exports){\n/*\nclass to parse the .mid file format\n(depends on stream.js)\n*/\nmodule.exports = function (data) {\n\tvar Stream = require('./stream');\n\tvar ticksPerBeat;\n\tfunction readChunk(stream) {\n\t\tvar id = stream.read(4);\n\t\tvar length = stream.readInt32();\n\t\treturn {\n\t\t\t'id': id,\n\t\t\t'length': length,\n\t\t\t'data': stream.read(length)\n\t\t};\n\t}\n\t\n\tvar lastEventTypeByte;\n\t\n\tfunction readEvent(stream) {\n\t\tvar event = {};\n\t\tevent.deltaTime = stream.readVarInt();\n\t\tvar eventTypeByte = stream.readInt8();\n\t\tif ((eventTypeByte & 0xf0) == 0xf0) {\n\t\t\t/* system / meta event */\n\t\t\tif (eventTypeByte == 0xff) {\n\t\t\t\t/* meta event */\n\t\t\t\tevent.type = 'meta';\n\t\t\t\tvar subtypeByte = stream.readInt8();\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tswitch(subtypeByte) {\n\t\t\t\t\tcase 0x00:\n\t\t\t\t\t\tevent.subtype = 'sequenceNumber';\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for sequenceNumber event is 2, got \" + length;\n\t\t\t\t\t\tevent.number = stream.readInt16();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x01:\n\t\t\t\t\t\tevent.subtype = 'text';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x02:\n\t\t\t\t\t\tevent.subtype = 'copyrightNotice';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x03:\n\t\t\t\t\t\tevent.subtype = 'trackName';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x04:\n\t\t\t\t\t\tevent.subtype = 'instrumentName';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x05:\n\t\t\t\t\t\tevent.subtype = 'lyrics';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x06:\n\t\t\t\t\t\tevent.subtype = 'marker';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x07:\n\t\t\t\t\t\tevent.subtype = 'cuePoint';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x20:\n\t\t\t\t\t\tevent.subtype = 'midiChannelPrefix';\n\t\t\t\t\t\tif (length != 1) throw \"Expected length for midiChannelPrefix event is 1, got \" + length;\n\t\t\t\t\t\tevent.channel = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x2f:\n\t\t\t\t\t\tevent.subtype = 'endOfTrack';\n\t\t\t\t\t\tif (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length;\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x51:\n\t\t\t\t\t\tevent.subtype = 'setTempo';\n\t\t\t\t\t\tif (length != 3) throw \"Expected length for setTempo event is 3, got \" + length;\n\t\t\t\t\t\tevent.microsecondsPerBeat = (\n\t\t\t\t\t\t\t(stream.readInt8() << 16)\n\t\t\t\t\t\t\t+ (stream.readInt8() << 8)\n\t\t\t\t\t\t\t+ stream.readInt8()\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x54:\n\t\t\t\t\t\tevent.subtype = 'smpteOffset';\n\t\t\t\t\t\tif (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length;\n\t\t\t\t\t\tvar hourByte = stream.readInt8();\n\t\t\t\t\t\tevent.frameRate = {\n\t\t\t\t\t\t\t0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n\t\t\t\t\t\t}[hourByte & 0x60];\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f;\n\t\t\t\t\t\tevent.min = stream.readInt8();\n\t\t\t\t\t\tevent.sec = stream.readInt8();\n\t\t\t\t\t\tevent.frame = stream.readInt8();\n\t\t\t\t\t\tevent.subframe = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x58:\n\t\t\t\t\t\tevent.subtype = 'timeSignature';\n\t\t\t\t\t\tif (length != 4) throw \"Expected length for timeSignature event is 4, got \" + length;\n\t\t\t\t\t\tevent.numerator = stream.readInt8();\n\t\t\t\t\t\tevent.denominator = Math.pow(2, stream.readInt8());\n\t\t\t\t\t\tevent.metronome = stream.readInt8();\n\t\t\t\t\t\tevent.thirtyseconds = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x59:\n\t\t\t\t\t\tevent.subtype = 'keySignature';\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for keySignature event is 2, got \" + length;\n\t\t\t\t\t\tevent.key = stream.readInt8(true);\n\t\t\t\t\t\tevent.scale = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x7f:\n\t\t\t\t\t\tevent.subtype = 'sequencerSpecific';\n\t\t\t\t\t\tevent.data = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// console.log(\"Unrecognised meta event subtype: \" + subtypeByte);\n\t\t\t\t\t\tevent.subtype = 'unknown'\n\t\t\t\t\t\tevent.data = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else if (eventTypeByte == 0xf0) {\n\t\t\t\tevent.type = 'sysEx';\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else if (eventTypeByte == 0xf7) {\n\t\t\t\tevent.type = 'dividedSysEx';\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else {\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte;\n\t\t\t}\n\t\t} else {\n\t\t\t/* channel event */\n\t\t\tvar param1;\n\t\t\tif ((eventTypeByte & 0x80) == 0) {\n\t\t\t\t/* running status - reuse lastEventTypeByte as the event type.\n\t\t\t\t\teventTypeByte is actually the first parameter\n\t\t\t\t*/\n\t\t\t\tparam1 = eventTypeByte;\n\t\t\t\teventTypeByte = lastEventTypeByte;\n\t\t\t} else {\n\t\t\t\tparam1 = stream.readInt8();\n\t\t\t\tlastEventTypeByte = eventTypeByte;\n\t\t\t}\n\t\t\tvar eventType = eventTypeByte >> 4;\n\t\t\tevent.channel = eventTypeByte & 0x0f;\n\t\t\tevent.type = 'channel';\n\t\t\tswitch (eventType) {\n\t\t\t\tcase 0x08:\n\t\t\t\t\tevent.subtype = 'noteOff';\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.velocity = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x09:\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.velocity = stream.readInt8();\n\t\t\t\t\tif (event.velocity == 0) {\n\t\t\t\t\t\tevent.subtype = 'noteOff';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevent.subtype = 'noteOn';\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0a:\n\t\t\t\t\tevent.subtype = 'noteAftertouch';\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.amount = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0b:\n\t\t\t\t\tevent.subtype = 'controller';\n\t\t\t\t\tevent.controllerType = param1;\n\t\t\t\t\tevent.value = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0c:\n\t\t\t\t\tevent.subtype = 'programChange';\n\t\t\t\t\tevent.programNumber = param1;\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0d:\n\t\t\t\t\tevent.subtype = 'channelAftertouch';\n\t\t\t\t\tevent.amount = param1;\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0e:\n\t\t\t\t\tevent.subtype = 'pitchBend';\n\t\t\t\t\tevent.value = param1 + (stream.readInt8() << 7);\n\t\t\t\t\treturn event;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\n\t\t\t\t\t/* \n\t\t\t\t\tconsole.log(\"Unrecognised MIDI event type: \" + eventType);\n\t\t\t\t\tstream.readInt8();\n\t\t\t\t\tevent.subtype = 'unknown';\n\t\t\t\t\treturn event;\n\t\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar stream = Stream(data);\n\tvar headerChunk = readChunk(stream);\n\tif (headerChunk.id != 'MThd' || headerChunk.length != 6) {\n\t\tthrow \"Bad .mid file - header not found\";\n\t}\n\tvar headerStream = Stream(headerChunk.data);\n\tvar formatType = headerStream.readInt16();\n\tvar trackCount = headerStream.readInt16();\n\tvar timeDivision = headerStream.readInt16();\n\t\n\tif (timeDivision & 0x8000) {\n\t\tthrow \"Expressing time division in SMTPE frames is not supported yet\"\n\t} else {\n\t\tticksPerBeat = timeDivision;\n\t}\n\t\n\tvar header = {\n\t\t'formatType': formatType,\n\t\t'trackCount': trackCount,\n\t\t'ticksPerBeat': ticksPerBeat\n\t};\n\n\tvar tracks = [];\n\tfor (var i = 0; i < header.trackCount; i++) {\n\t\ttracks[i] = [];\n\t\tvar trackChunk = readChunk(stream);\n\t\tif (trackChunk.id != 'MTrk') {\n\t\t\tthrow \"Unexpected chunk - expected MTrk, got \"+ trackChunk.id;\n\t\t}\n\t\tvar trackStream = Stream(trackChunk.data);\n\t\twhile (!trackStream.eof()) {\n\t\t\tvar event = readEvent(trackStream);\n\t\t\ttracks[i].push(event);\n\t\t}\n\t}\n\t\n\treturn {\n\t\t'header': header,\n\t\t'tracks': tracks\n\t}\n};\n},{\"./stream\":30}],29:[function(require,module,exports){\nvar clone = function (o) {\n\tif (typeof o != 'object') return (o);\n\tif (o == null) return (o);\n\tvar ret = (typeof o.length == 'number') ? [] : {};\n\tfor (var key in o) ret[key] = clone(o[key]);\n\treturn ret;\n};\n\nmodule.exports = function (midiFile, timeWarp, eventProcessor, bpm) {\n\tvar trackStates = [];\n\tvar beatsPerMinute = bpm ? bpm : 120;\n\tvar bpmOverride = bpm ? true : false;\n\n\tvar ticksPerBeat = midiFile.header.ticksPerBeat;\n\t\n\tfor (var i = 0; i < midiFile.tracks.length; i++) {\n\t\ttrackStates[i] = {\n\t\t\t'nextEventIndex': 0,\n\t\t\t'ticksToNextEvent': (\n\t\t\t\tmidiFile.tracks[i].length ?\n\t\t\t\t\tmidiFile.tracks[i][0].deltaTime :\n\t\t\t\t\tnull\n\t\t\t)\n\t\t};\n\t}\n\n\tvar nextEventInfo;\n\tvar samplesToNextEvent = 0;\n\t\n\tfunction getNextEvent() {\n\t\tvar ticksToNextEvent = null;\n\t\tvar nextEventTrack = null;\n\t\tvar nextEventIndex = null;\n\t\t\n\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\tif (\n\t\t\t\ttrackStates[i].ticksToNextEvent != null\n\t\t\t\t&& (ticksToNextEvent == null || trackStates[i].ticksToNextEvent < ticksToNextEvent)\n\t\t\t) {\n\t\t\t\tticksToNextEvent = trackStates[i].ticksToNextEvent;\n\t\t\t\tnextEventTrack = i;\n\t\t\t\tnextEventIndex = trackStates[i].nextEventIndex;\n\t\t\t}\n\t\t}\n\t\tif (nextEventTrack != null) {\n\t\t\t/* consume event from that track */\n\t\t\tvar nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex];\n\t\t\tif (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\n\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent += midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime;\n\t\t\t} else {\n\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent = null;\n\t\t\t}\n\t\t\ttrackStates[nextEventTrack].nextEventIndex += 1;\n\t\t\t/* advance timings on all tracks by ticksToNextEvent */\n\t\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\t\tif (trackStates[i].ticksToNextEvent != null) {\n\t\t\t\t\ttrackStates[i].ticksToNextEvent -= ticksToNextEvent\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t\"ticksToEvent\": ticksToNextEvent,\n\t\t\t\t\"event\": nextEvent,\n\t\t\t\t\"track\": nextEventTrack\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t//\n\tvar midiEvent;\n\tvar temporal = [];\n\t//\n\tfunction processEvents() {\n\t\tfunction processNext() {\n\t\t    if (!bpmOverride && midiEvent.event.type == \"meta\" && midiEvent.event.subtype == \"setTempo\" ) {\n\t\t\t\t// tempo change events can occur anywhere in the middle and affect events that follow\n\t\t\t\tbeatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat;\n\t\t\t}\n\t\t\t///\n\t\t\tvar beatsToGenerate = 0;\n\t\t\tvar secondsToGenerate = 0;\n\t\t\tif (midiEvent.ticksToEvent > 0) {\n\t\t\t\tbeatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;\n\t\t\t\tsecondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);\n\t\t\t}\n\t\t\t///\n\t\t\tvar time = (secondsToGenerate * 1000 * timeWarp) || 0;\n\t\t\ttemporal.push([ midiEvent, time]);\n\t\t\tmidiEvent = getNextEvent();\n\t\t};\n\t\t///\n\t\tif (midiEvent = getNextEvent()) {\n\t\t\twhile(midiEvent) processNext(true);\n\t\t}\n\t}\n\tprocessEvents();\n\n\treturn {\n\t\t\"getData\": function() {\n\t\t\treturn clone(temporal);\n\t\t}\n\t};\n};\n\n},{}],30:[function(require,module,exports){\n/* Wrapper for accessing strings through sequential reads */\nmodule.exports = function (str) {\n    var position = 0;\n\n    function read(length) {\n        var result = str.substr(position, length);\n        position += length;\n        return result;\n    }\n\n    /* read a big-endian 32-bit integer */\n    function readInt32() {\n        var result = (\n        (str.charCodeAt(position) << 24)\n        + (str.charCodeAt(position + 1) << 16)\n        + (str.charCodeAt(position + 2) << 8)\n        + str.charCodeAt(position + 3));\n        position += 4;\n        return result;\n    }\n\n    /* read a big-endian 16-bit integer */\n    function readInt16() {\n        var result = (\n        (str.charCodeAt(position) << 8)\n        + str.charCodeAt(position + 1));\n        position += 2;\n        return result;\n    }\n\n    /* read an 8-bit integer */\n    function readInt8(signed) {\n        var result = str.charCodeAt(position);\n        if (signed && result > 127) result -= 256;\n        position += 1;\n        return result;\n    }\n\n    function eof() {\n        return position >= str.length;\n    }\n\n    /* read a MIDI-style variable-length integer\n     (big-endian value in groups of 7 bits,\n     with top bit set to signify that another byte follows)\n     */\n    function readVarInt() {\n        var result = 0;\n        while (true) {\n            var b = readInt8();\n            if (b & 0x80) {\n                result += (b & 0x7f);\n                result <<= 7;\n            } else {\n                /* b is the last byte */\n                return result + b;\n            }\n        }\n    }\n\n    return {\n        'eof': eof,\n        'read': read,\n        'readInt32': readInt32,\n        'readInt16': readInt16,\n        'readInt8': readInt8,\n        'readVarInt': readVarInt\n    }\n};\n},{}],31:[function(require,module,exports){\n/**\n * @license -------------------------------------------------------------------\n *   module: Base64Binary\n *      src: http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/\n *  license: Simplified BSD License\n * -------------------------------------------------------------------\n * Copyright 2011, Daniel Guerrero. All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     - Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     - Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nmodule.exports = {\n\t_keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n\t/* will return a  Uint8Array type */\n\tdecodeArrayBuffer: function(input) {\n\t\tvar bytes = Math.ceil( (3*input.length) / 4.0);\n\t\tvar ab = new ArrayBuffer(bytes);\n\t\tthis.decode(input, ab);\n\n\t\treturn ab;\n\t},\n\n\tdecode: function(input, arrayBuffer) {\n\t\t//get last chars to see if are valid\n\t\tvar lkey1 = this._keyStr.indexOf(input.charAt(input.length-1));\t\t \n\t\tvar lkey2 = this._keyStr.indexOf(input.charAt(input.length-1));\t\t \n\n\t\tvar bytes = Math.ceil( (3*input.length) / 4.0);\n\t\tif (lkey1 == 64) bytes--; //padding chars, so skip\n\t\tif (lkey2 == 64) bytes--; //padding chars, so skip\n\n\t\tvar uarray;\n\t\tvar chr1, chr2, chr3;\n\t\tvar enc1, enc2, enc3, enc4;\n\t\tvar i = 0;\n\t\tvar j = 0;\n\n\t\tif (arrayBuffer)\n\t\t\tuarray = new Uint8Array(arrayBuffer);\n\t\telse\n\t\t\tuarray = new Uint8Array(bytes);\n\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n\t\tfor (i=0; i<bytes; i+=3) {\t\n\t\t\t//get the 3 octects in 4 ascii chars\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(j++));\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(j++));\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(j++));\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(j++));\n\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\n\t\t\tuarray[i] = chr1;\t\t\t\n\t\t\tif (enc3 != 64) uarray[i+1] = chr2;\n\t\t\tif (enc4 != 64) uarray[i+2] = chr3;\n\t\t}\n\n\t\treturn uarray;\t\n\t}\n};\n},{}],32:[function(require,module,exports){\nvar midi = function () {\n    var api = {};\n    var loader = require('./midi/loader')();\n    var player = require('./midi/player')();\n    return loader;\n};\n\nmodule.exports = midi;\nwindow.globalmidi = midi;\n},{\"./midi/loader\":35,\"./midi/player\":36}],33:[function(require,module,exports){\n/*\n\t----------------------------------------------------------\n\tMIDI.audioDetect : 0.3.2 : 2015-03-26\n\t----------------------------------------------------------\n\thttps://github.com/mudcube/MIDI.js\n\t----------------------------------------------------------\n\tProbably, Maybe, No... Absolutely!\n\tTest to see what types of <audio> MIME types are playable by the browser.\n\t----------------------------------------------------------\n*/\nvar supports = {}; // object of supported file types\nvar pending = 0; // pending file types to process\nvar canPlayThrough = function (src) { // check whether format plays through\n\tpending ++;\n\tvar body = document.body;\n\tvar audio = new Audio();\n\tvar mime = src.split(';')[0];\n\taudio.id = 'audio';\n\taudio.setAttribute('preload', 'auto');\n\taudio.setAttribute('audiobuffer', true);\n\taudio.addEventListener('error', function() {\n\t\tbody.removeChild(audio);\n\t\tsupports[mime] = false;\n\t\tpending --;\n\t}, false);\n\taudio.addEventListener('canplaythrough', function() {\n\t\tbody.removeChild(audio);\n\t\tsupports[mime] = true;\n\t\tpending --;\n\t}, false);\n\taudio.src = 'data:' + src;\n\tbody.appendChild(audio);\n};\n\nvar audioDetect = function(onsuccess) {\n\t/// detect jazz-midi plugin\n\tif (navigator.requestMIDIAccess) {\n\t\tvar isNative = Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf('[native code]');\n\t\tif (isNative) { // has native midiapi support\n\t\t\tsupports['webmidi'] = true;\n\t\t} else { // check for jazz plugin midiapi support\n\t\t\tfor (var n = 0; navigator.plugins.length > n; n ++) {\n\t\t\t\tvar plugin = navigator.plugins[n];\n\t\t\t\tif (plugin.name.indexOf('Jazz-Plugin') >= 0) {\n\t\t\t\t\tsupports['webmidi'] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/// check whether <audio> tag is supported\n\tif (typeof(Audio) === 'undefined') {\n\t\treturn onsuccess({});\n\t} else {\n\t\tsupports['audiotag'] = true;\n\t}\n\n\t/// check for webaudio api support\n\tif (window.AudioContext || window.webkitAudioContext) {\n\t\tsupports['webaudio'] = true;\n\t}\n\n\t/// check whether canPlayType is supported\n\tvar audio = new Audio();\n\tif (typeof(audio.canPlayType) === 'undefined') {\n\t\treturn onsuccess(supports);\n\t}\n\n\t/// see what we can learn from the browser\n\tvar vorbis = audio.canPlayType('audio/ogg; codecs=\"vorbis\"');\n\tvorbis = (vorbis === 'probably' || vorbis === 'maybe');\n\tvar mpeg = audio.canPlayType('audio/mpeg');\n\tmpeg = (mpeg === 'probably' || mpeg === 'maybe');\n\t// maybe nothing is supported\n\tif (!vorbis && !mpeg) {\n\t\tonsuccess(supports);\n\t\treturn;\n\t}\n\n\t/// or maybe something is supported\n\tif (vorbis) canPlayThrough('audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=');\n\tif (mpeg) canPlayThrough('audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq');\n\n\t/// lets find out!\n\tvar time = (new Date()).getTime();\n\tvar interval = window.setInterval(function() {\n\t\tvar now = (new Date()).getTime();\n\t\tvar maxExecution = now - time > 5000;\n\t\tif (!pending || maxExecution) {\n\t\t\twindow.clearInterval(interval);\n\t\t\tonsuccess(supports);\n\t\t}\n\t}, 1);\n};\n\nmodule.exports = audioDetect;\n},{}],34:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n GeneralMIDI\n ----------------------------------------------------------\n */\nvar root = {};\nvar _ = {\n    find: require('lodash.find')\n};\nroot.GM = (function () {\n    var instruments = require('../instruments.json');\n\n    var clean = function (name) {\n        return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase();\n    };\n\n    var res = {\n        byId: function(id){\n            var ins;\n            _.find(instruments, function(categorie, key){\n                var result = _.find(categorie, function(instrument, key){\n                    if(instrument == id){\n                        ins = {};\n                        ins.instrument = key;\n                        ins.number = instrument;\n                        ins.id = clean(key);\n                        return true;\n                    }\n                });\n                if(result){\n                    ins.category = key;\n                    return true;\n                }\n            });\n\n            return ins;\n        },\n        byName: function(name){\n            var ins;\n            _.find(instruments, function(categorie, key){\n                var result = _.find(categorie, function(instrument, key){\n                    if(name == key){\n                        ins = {};\n                        ins.instrument = key;\n                        ins.number = instrument;\n                        ins.id = clean(key);\n                        return true;\n                    }\n                });\n                if(result){\n                    ins.category = key;\n                    return true;\n                }\n            });\n\n            return ins;\n        },\n        byCleanName: function(name){\n            var ins;\n            _.find(instruments, function(categorie, key){\n                var result = _.find(categorie, function(instrument, key){\n                    if(name == clean(key)){\n                        ins = {};\n                        ins.instrument = key;\n                        ins.number = instrument;\n                        ins.id = clean(key);\n                        return true;\n                    }\n                });\n                if(result){\n                    ins.category = key;\n                    return true;\n                }\n            });\n\n            return ins;\n        },\n        byCategory: function(cat){\n            return _.find(instruments, function(categorie, key){\n                return cat == key;\n            })\n        }\n    };\n\n    return res;\n})();\n\n/* get/setInstrument\n --------------------------------------------------- */\nroot.getInstrument = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.instrument;\n};\n\nroot.setInstrument = function (channelId, program, delay) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.instrument = program;\n        }, delay);\n    } else {\n        channel.instrument = program;\n    }\n};\n\n/* get/setMono\n --------------------------------------------------- */\nroot.getMono = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.mono;\n};\n\nroot.setMono = function (channelId, truthy, delay) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.mono = truthy;\n        }, delay);\n    } else {\n        channel.mono = truthy;\n    }\n};\n\n/* get/setOmni\n --------------------------------------------------- */\nroot.getOmni = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.omni;\n};\n\nroot.setOmni = function (channelId, truthy) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.omni = truthy;\n        }, delay);\n    } else {\n        channel.omni = truthy;\n    }\n};\n\n/* get/setSolo\n --------------------------------------------------- */\nroot.getSolo = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.solo;\n};\n\nroot.setSolo = function (channelId, truthy) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.solo = truthy;\n        }, delay);\n    } else {\n        channel.solo = truthy;\n    }\n};\n\n\n/* note conversions\n --------------------------------------------------- */\nroot.keyToNote = {}; // C8  == 108\nroot.noteToKey = {}; // 108 ==  C8\n\n(function () {\n    var A0 = 0x15; // first note\n    var C8 = 0x6C; // last note\n    var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n    for (var n = A0; n <= C8; n++) {\n        var octave = (n - 12) / 12 >> 0;\n        var name = number2key[n % 12] + octave;\n        root.keyToNote[name] = n;\n        root.noteToKey[n] = name;\n    }\n})();\n\nmodule.exports = root\n},{\"../instruments.json\":27,\"lodash.find\":14}],35:[function(require,module,exports){\n/**\n ----------------------------------------------------------\n MIDI.Plugin : 0.3.4 : 2015-03-26\n ----------------------------------------------------------\n https://github.com/mudcube/MIDI.js\n ----------------------------------------------------------\n Inspired by javax.sound.midi (albeit a super simple version):\n http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html\n ----------------------------------------------------------\n Technologies\n ----------------------------------------------------------\n Web MIDI API - no native support yet (jazzplugin)\n Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+\n HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+\n ----------------------------------------------------------\n **/\n\n\nmodule.exports = function() {\n    window.MIDI = {};\n    window.MIDI.Soundfont = {};\n    'use strict';\n    var audioDetect = require('./audioDetect');\n    var generalMIDI = require('./gm');\n    var _ = {\n        merge : require('lodash.merge')\n    };\n    var webMidi = require('./plugin.webmidi');\n    var audiotag = require('./plugin.audiotag');\n    var webaudio = require('./plugin.webaudio');\n    var request = require('../util/dom_request_xhr');\n    var dom = require('../util/dom_request_script');\n\n    var root = {};\n    root.Player = require('./player')(root);\n    root.DEBUG = true;\n    root.USE_XHR = true;\n    root.soundfontUrl = './soundfont/';\n    root.channels = (function () { // 0 - 15 channels\n        var channels = {};\n        for (var i = 0; i < 16; i++) {\n            channels[i] = { // default values\n                instrument: 0,\n                pitchBend: 0,\n                mute: false,\n                mono: false,\n                omni: false,\n                solo: false,\n                volume: 1\n            };\n        }\n        return channels;\n    })();\n    /*\n     MIDI.loadPlugin({\n     onsuccess: function() { },\n     onprogress: function(state, percent) { },\n     targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)\n     instrument: 'acoustic_grand_piano', // or 1 (default)\n     instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments\n     });\n     */\n\n    root.loadPlugin = function (opts) {\n        if (typeof opts === 'function') {\n            opts = {onsuccess: opts};\n        }\n\n        if(typeof opts.channels !== 'undefined'){\n            for (var i = 0; i < opts.channels.length ; i++){\n                root.channels[i].instrument = opts.channels[i]\n            }\n        }\n\n        root.soundfontUrl = opts.soundfontUrl || root.soundfontUrl;\n\n        /// Detect the best type of audio to use\n        audioDetect(function (supports) {\n            var hash = window.location.hash;\n            var api = '';\n            /// use the most appropriate plugin if not specified\n            if (supports[opts.api]) {\n                api = opts.api;\n            } else if (supports[hash.substr(1)]) {\n                api = hash.substr(1);\n            }\n            /*\n             else if (supports.webmidi) {\n             api = 'webmidi';\n             }\n             */\n            else if (window.AudioContext) { // Chrome\n                api = 'webaudio';\n\n            }\n            else if (window.Audio) { // Firefox\n                api = 'audiotag';\n            }\n\n            /// use audio/ogg when supported\n            if (opts.targetFormat) {\n                var audioFormat = opts.targetFormat;\n            } else { // use best quality\n                var audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3';\n            }\n\n            /// load the specified plugin\n            root.__api = api;\n            root.__audioFormat = audioFormat;\n            root.supports = supports;\n            root.loadResource(opts);\n        });\n    };\n\n    /*\n     root.loadResource({\n     onsuccess: function() { },\n     onprogress: function(state, percent) { },\n     instrument: 'banjo'\n     })\n     */\n\n    root.loadResource = function (opts) {\n        var instruments = opts.instruments || opts.instrument || 'acoustic_grand_piano';\n        ///\n        if (typeof instruments !== 'object') {\n            if (instruments || instruments === 0) {\n                instruments = [instruments];\n            } else {\n                instruments = [];\n            }\n        }\n\n        /// convert numeric ids into strings\n        for (var i = 0; i < instruments.length; i++) {\n            var instrument = instruments[i];\n            if (instrument === +instrument) { // is numeric\n                if (generalMIDI.GM.byId(instrument)) {\n                    var ins = generalMIDI.GM.byId(instrument);\n                    instruments[i] = ins.id;\n                    // if the instrument is a percussion add it to channel 10\n                    if(ins['category'] === 'Percussive'){\n                        root.channels[9].instrument = ins.number;\n                    }\n                }\n            }\n        }\n\n        ///\n        opts.format = root.__audioFormat;\n        opts.instruments = instruments;\n        ///\n        root.midi = connect(root.__api, opts);\n    };\n\n    var connect = function(api, opts){\n        switch(api) {\n            case 'webmidi':\n                // cant wait for this to be standardized!\n                root = _.merge(root, webMidi.connect(opts, root.channels));\n                break;\n            case 'audiotag':\n                // works ok, kinda like a drunken tuna fish, across the board\n                // http://caniuse.com/audio\n                requestQueue(opts, audiotag);\n                break;\n            case 'webaudio':\n                // works awesome! safari, chrome and firefox support\n                // http://caniuse.com/web-audio\n                requestQueue(opts, webaudio);\n                break;\n        }\n        root.__api = api;\n    };\n\n    var requestQueue = function (opts, context) {\n        var audioFormat = opts.format;\n        var instruments = opts.instruments;\n        var onprogress = opts.onprogress;\n        var onerror = opts.onerror;\n        ///\n        var length = instruments.length;\n        var pending = length;\n        var waitForEnd = function () {\n            if (!--pending) {\n                onprogress && onprogress('load', 1.0);\n                root =_.merge(root, context.connect(opts, root.channels));\n            }\n        };\n        ///\n        for (var i = 0; i < length; i++) {\n            var instrumentId = instruments[i];\n            if (window.MIDI.Soundfont[instrumentId]) { // already loaded\n                waitForEnd();\n            } else { // needs to be requested\n                sendRequest(instruments[i], audioFormat, function (evt, progress) {\n                    var fileProgress = progress / length;\n                    var queueProgress = (length - pending) / length;\n                    onprogress && onprogress('load', fileProgress + queueProgress, instrumentId);\n                }, function () {\n                    waitForEnd();\n                }, onerror);\n            }\n        };\n    };\n\n    var sendRequest = function (instrumentId, audioFormat, onprogress, onsuccess, onerror) {\n        var soundfontPath = root.soundfontUrl + instrumentId + '-' + audioFormat + '.js';\n        request({\n            url: soundfontPath,\n            format: 'text',\n            onerror: onerror,\n            onprogress: onprogress,\n            onsuccess: function (event, responseText) {\n                var script = document.createElement('script');\n                script.language = 'javascript';\n                script.type = 'text/javascript';\n                script.text = responseText;\n                document.body.appendChild(script);\n\n                ///\n                onsuccess();\n            }\n        });\n    };\n\n    root.setDefaultPlugin = function (midi) {\n        for (var key in midi) {\n            root[key] = midi[key];\n        }\n    };\n\n    return root;\n};\n},{\"../util/dom_request_script\":40,\"../util/dom_request_xhr\":41,\"./audioDetect\":33,\"./gm\":34,\"./player\":36,\"./plugin.audiotag\":37,\"./plugin.webaudio\":38,\"./plugin.webmidi\":39,\"lodash.merge\":21}],36:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n MIDI.Player : 0.3.1 : 2015-03-26\n ----------------------------------------------------------\n https://github.com/mudcube/MIDI.js\n ----------------------------------------------------------\n */\nmodule.exports = function (MIDI) {\n    var generalMIDI = require('./gm');\n    var Replayer = require('../jasmid/replayer');\n    var MidiFile = require('../jasmid/midifile');\n    'use strict';\n    var midi = {};\n    midi.tracks = {};\n    midi.currentTime = 0;\n    midi.endTime = 0;\n    midi.restart = 0;\n    midi.playing = false;\n    midi.timeWarp = 1;\n    midi.startDelay = 0;\n    midi.start =\n        midi.resume = function (onsuccess) {\n            if (midi.currentTime < -1) {\n                midi.currentTime = -1;\n            }\n            startAudio(midi.currentTime, null, onsuccess);\n        };\n\n    midi.pause = function () {\n        var tmp = midi.restart;\n        stopAudio();\n        midi.restart = tmp;\n    };\n\n    midi.stop = function () {\n        stopAudio();\n        midi.restart = 0;\n        midi.currentTime = 0;\n    };\n\n    midi.addListener = function (onsuccess) {\n        onMidiEvent = onsuccess;\n    };\n\n    midi.removeListener = function () {\n        onMidiEvent = undefined;\n    };\n\n    midi.clearAnimation = function () {\n        if (midi.animationFrameId) {\n            cancelAnimationFrame(midi.animationFrameId);\n        }\n    };\n\n    midi.setAnimation = function (callback) {\n        var currentTime = 0;\n        var tOurTime = 0;\n        var tTheirTime = 0;\n        //\n        midi.clearAnimation();\n        ///\n        var frame = function () {\n            midi.animationFrameId = requestAnimationFrame(frame);\n            ///\n            if (midi.endTime === 0) {\n                return;\n            }\n            if (midi.playing) {\n                currentTime = (tTheirTime === midi.currentTime) ? tOurTime - Date.now() : 0;\n                if (midi.currentTime === 0) {\n                    currentTime = 0;\n                } else {\n                    currentTime = midi.currentTime - currentTime;\n                }\n                if (tTheirTime !== midi.currentTime) {\n                    tOurTime = Date.now();\n                    tTheirTime = midi.currentTime;\n                }\n            } else { // paused\n                currentTime = midi.currentTime;\n            }\n            ///\n            var endTime = midi.endTime;\n            var percent = currentTime / endTime;\n            var total = currentTime / 1000;\n            var minutes = total / 60;\n            var seconds = total - (minutes * 60);\n            var t1 = minutes * 60 + seconds;\n            var t2 = (endTime / 1000);\n            ///\n            if (t2 - t1 < -1.0) {\n                return;\n            } else {\n                callback({\n                    now: t1,\n                    end: t2,\n                    events: noteRegistrar\n                });\n            }\n        };\n        ///\n        requestAnimationFrame(frame);\n    };\n    // helpers\n    midi.loadMidiFile = function (onsuccess, onprogress, onerror) {\n        midi.replayer = new Replayer(MidiFile(midi.currentData), midi.timeWarp, null);\n        midi.data = midi.replayer.getData();\n        midi.endTime = getLength();\n        midi.tracks = midi.getFileTracks();\n        midi.instruments = midi.getFileInstruments();\n        MIDI.loadResource(\n            {\n                instruments: midi.instruments,\n                onsuccess: function () {\n                    console.log('reconnect')\n                    MIDI.reconnect(onsuccess);\n                },\n                onprogress: onprogress,\n                onerror: onerror\n            });\n    };\n\n    midi.loadFile = function (file, onsuccess, onprogress, onerror) {\n        midi.stop();\n        if (file.indexOf('base64,') !== -1) {\n            var data = window.atob(file.split(',')[1]);\n            midi.currentData = data;\n            midi.loadMidiFile(onsuccess, onprogress, onerror);\n        } else {\n            var fetch = new XMLHttpRequest();\n            fetch.open('GET', file);\n            fetch.overrideMimeType('text/plain; charset=x-user-defined');\n            fetch.onreadystatechange = function () {\n                if (this.readyState === 4) {\n                    if (this.status === 200) {\n                        var t = this.responseText || '';\n                        var ff = [];\n                        var mx = t.length;\n                        var scc = String.fromCharCode;\n                        for (var z = 0; z < mx; z++) {\n                            ff[z] = scc(t.charCodeAt(z) & 255);\n                        }\n                        ///\n                        var data = ff.join('');\n                        midi.currentData = data;\n                        midi.loadMidiFile(onsuccess, onprogress, onerror);\n                    } else {\n                        onerror && onerror('Unable to load MIDI file');\n                    }\n                }\n            };\n            fetch.send();\n        }\n    };\n\n    midi.getFileTracks = function () {\n        var tracks = {};\n        for (var n = 0; n < midi.data.length; n++) {\n            var event = midi.data[n][0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            var channel = event.channel;\n            switch (event.subtype) {\n                case 'programChange':\n                    tracks[midi.data[n][0].track] = channel;\n                    break;\n            }\n        }\n        return tracks;\n    }\n    midi.getFileInstruments = function () {\n        var instruments = {};\n        var programs = {};\n        var channels = {};\n\n        for (var n = 0; n < midi.data.length; n++) {\n            var event = midi.data[n][0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            var channel = event.channel;\n            switch (event.subtype) {\n                case 'controller':\n                    (event)\n//\t\t\t\tconsole.log(event.channel, MIDI.defineControl[event.controllerType], event.value);\n                    break;\n                case 'programChange':\n                    programs[channel] = event.programNumber;\n                    var gm = generalMIDI.GM.byId(event.programNumber);\n                    instruments[gm.id] = true;\n\n                    break;\n            }\n        }\n\n        var ret = [];\n        for (var key in instruments) {\n            ret.push(key);\n        }\n        return ret;\n    };\n\n    // Playing the audio\n\n    var eventQueue = []; // hold events to be triggered\n    var queuedTime; //\n    var startTime = 0; // to measure time elapse\n    var noteRegistrar = {}; // get event for requested note\n    var onMidiEvent = undefined; // listener\n    var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {\n        return setTimeout(function () {\n            var data = {\n                channel: channel,\n                note: note,\n                now: currentTime,\n                end: midi.endTime,\n                message: message,\n                velocity: velocity\n            };\n            //\n            if (message === 128) {\n                delete noteRegistrar[note];\n            } else {\n                noteRegistrar[note] = data;\n            }\n            if (onMidiEvent) {\n                onMidiEvent(data);\n            }\n            midi.currentTime = currentTime;\n            ///\n            eventQueue.shift();\n            ///\n            if (eventQueue.length < 1000) {\n                startAudio(queuedTime, true);\n            } else if (midi.currentTime === queuedTime && queuedTime < midi.endTime) { // grab next sequence\n                startAudio(queuedTime, true);\n            }\n        }, currentTime - offset);\n    };\n\n    var getContext = function () {\n        if (MIDI.api === 'webaudio') {\n            return MIDI.getContext();\n        } else {\n            midi.ctx = {currentTime: 0};\n        }\n        return midi.ctx;\n    };\n\n    var getLength = function () {\n        var data = midi.data;\n        var length = data.length;\n        var totalTime = 0.5;\n        for (var n = 0; n < length; n++) {\n            totalTime += data[n][1];\n        }\n        return totalTime;\n    };\n\n    var __now;\n    var getNow = function () {\n        if (window.performance && window.performance.now) {\n            return window.performance.now();\n        } else {\n            return Date.now();\n        }\n    };\n\n    var startAudio = function (currentTime, fromCache, onsuccess) {\n        if (!midi.replayer) {\n            return;\n        }\n        if (!fromCache) {\n            if (typeof currentTime === 'undefined') {\n                currentTime = midi.restart;\n            }\n            ///\n            midi.playing && stopAudio();\n            midi.playing = true;\n            midi.data = midi.replayer.getData();\n            midi.endTime = getLength();\n        }\n        ///\n        var note;\n        var offset = 0;\n        var messages = 0;\n        var data = midi.data;\n        var ctx = getContext();\n        var length = data.length;\n        //\n        queuedTime = 0;\n        ///\n        var interval = eventQueue[0] && eventQueue[0].interval || 0;\n        var foffset = currentTime - midi.currentTime;\n        ///\n        if (MIDI.api === 'webmidi') {\n            ctx.currentTime = getNow() / 1000;\n        } else if (MIDI.api !== 'webaudio') { // set currentTime on ctx\n            var now = getNow();\n            __now = __now || now;\n            ctx.currentTime = (now - __now) / 1000;\n        }\n        ///\n        startTime = ctx.currentTime;\n        ///\n        for (var n = 0; n < length && messages < 100; n++) {\n            var obj = data[n];\n            if ((queuedTime += obj[1]) < currentTime) {\n                offset = queuedTime;\n                continue;\n            }\n            ///\n            currentTime = queuedTime - offset;\n            ///\n            var event = obj[0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            ///\n            var channelId = event.channel;\n\n            var channel = MIDI.channels[channelId];\n            var delay = ctx.currentTime + ((currentTime + foffset + midi.startDelay) / 1000);\n            var queueTime = queuedTime - offset + midi.startDelay;\n            switch (event.subtype) {\n                case 'controller':\n                    MIDI.setController(channelId, event.controllerType, event.value, delay);\n                    break;\n                case 'programChange':\n                    // the percussion should not be set from the midi, it is set in the loader.\n                    if (channelId != 9) {\n                        MIDI.programChange(channelId, event.programNumber, delay);\n                    }\n                    break;\n                case 'pitchBend':\n                    MIDI.pitchBend(channelId, event.value, delay);\n                    break;\n                case 'noteOn':\n                    if (channel.mute) break;\n                    note = event.noteNumber - (midi.MIDIOffset || 0);\n                    var temp = {\n                        event: event,\n                        time: queueTime,\n                        source: MIDI.noteOn(channelId, event.noteNumber, event.velocity, delay),\n                        interval: scheduleTracking(channelId, note, queuedTime + midi.startDelay, offset - foffset, 144, event.velocity)\n                    };\n                    eventQueue.push(temp);\n                    messages++;\n                    break;\n                case 'noteOff':\n                    if (channel.mute) break;\n                    note = event.noteNumber - (midi.MIDIOffset || 0);\n                    eventQueue.push({\n                        event: event,\n                        time: queueTime,\n                        source: MIDI.noteOff(channelId, event.noteNumber, delay),\n                        interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)\n                    });\n                    break;\n                default:\n                    break;\n            }\n        }\n        ///\n        onsuccess && onsuccess(eventQueue);\n    };\n\n    var stopAudio = function () {\n        var ctx = getContext();\n        midi.playing = false;\n        midi.restart += (ctx.currentTime - startTime) * 1000;\n        // stop the audio, and intervals\n        while (eventQueue.length) {\n            var o = eventQueue.pop();\n            window.clearInterval(o.interval);\n            if (!o.source) continue; // is not webaudio\n            if (typeof(o.source) === 'number') {\n                window.clearTimeout(o.source);\n            } else { // webaudio\n                o.source.disconnect(0);\n            }\n        }\n        // run callback to cancel any notes still playing\n        for (var key in noteRegistrar) {\n            var o = noteRegistrar[key]\n            if (noteRegistrar[key].message === 144 && onMidiEvent) {\n                onMidiEvent({\n                    channel: o.channel,\n                    note: o.note,\n                    now: o.now,\n                    end: o.end,\n                    message: 128,\n                    velocity: o.velocity\n                });\n            }\n        }\n        // reset noteRegistrar\n        noteRegistrar = {};\n    };\n\n    midi.setChannelVolume = function (val, channel) {\n        MIDI.channels[channel].volume = val;\n        if (MIDI.api === \"webaudio\") {\n            for (var i = 0; i < eventQueue.length; i++) {\n                var event = eventQueue[i];\n                if (event && event.source && typeof event.source.setChannelVolume === 'function' && event.source.channel === channel) {\n                    event.source.setChannelVolume(val);\n                }\n            }\n        }\n    };\n    midi.setTrackVolume = function (val, track) {\n        midi.setChannelVolume(val, midi.tracks[track]);\n    };\n\n    return midi;\n};\n\n},{\"../jasmid/midifile\":28,\"../jasmid/replayer\":29,\"./gm\":34}],37:[function(require,module,exports){\n/*\n ----------------------------------------------------------------------\n AudioTag <audio> - OGG or MPEG Soundbank\n ----------------------------------------------------------------------\n http://dev.w3.org/html5/spec/Overview.html#the-audio-element\n ----------------------------------------------------------------------\n */\nvar generalMIDI = require('./gm');\nvar Base64Binary = require('../lib/Base64binary');\nvar Tuna = require('tunajs');\nvar midi = {api: 'audiotag'};\nvar noteToKey = {};\nvar volume = 127; // floating point\nvar buffer_nid = -1; // current channel\nvar audioBuffers = []; // the audio channels\nvar notesOn = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls\nvar notes = {}; // the piano keys\nvar channels;\nfor (var nid = 0; nid < 12; nid++) {\n    audioBuffers[nid] = new Audio();\n}\n\nvar playChannel = function (channel, note) {\n    if (!channels[channel]) return;\n    var instrument = channels[channel].instrument;\n    var instrumentId = generalMIDI.GM.byId(instrument).id;\n    var note = notes[note];\n    if (note) {\n        var instrumentNoteId = instrumentId + '' + note.id;\n        var nid = (buffer_nid + 1) % audioBuffers.length;\n        var audio = audioBuffers[nid];\n        notesOn[nid] = instrumentNoteId;\n        if (!window.MIDI.Soundfont[instrumentId]) {\n            if (root.DEBUG) {\n                console.log('404', instrumentId);\n            }\n            return;\n        }\n        audio.src = window.MIDI.Soundfont[instrumentId][note.id];\n        audio.volume = (volume * channels[channel].volume) / 127;\n        audio.play();\n        buffer_nid = nid;\n    }\n};\n\nvar stopChannel = function (channel, note) {\n    if (!channels[channel]) return;\n    var instrument = channels[channel].instrument;\n    var instrumentId = generalMIDI.GM.byId(instrument).id;\n    var note = notes[note];\n    if (note) {\n        var instrumentNoteId = instrumentId + '' + note.id;\n        for (var i = 0, len = audioBuffers.length; i < len; i++) {\n            var nid = (i + buffer_nid + 1) % len;\n            var cId = notesOn[nid];\n            if (cId && cId == instrumentNoteId) {\n                audioBuffers[nid].pause();\n                notesOn[nid] = null;\n                return;\n            }\n        }\n    }\n};\n\nmidi.audioBuffers = audioBuffers;\nmidi.send = function (data, delay) {};\nmidi.setController = function (channel, type, value, delay) {};\nmidi.setVolume = function (channel, n) {\n    volume = n; //- should be channel specific volume\n};\n\nmidi.programChange = function (channel, program) {\n    channels[channel].instrument = program;\n};\n\nmidi.pitchBend = function (channel, program, delay) {\n};\n\nmidi.noteOn = function (channel, note, velocity, delay) {\n    var id = noteToKey[note];\n    if (!notes[id]) return;\n    if (delay) {\n        return setTimeout(function () {\n            playChannel(channel, id);\n        }, delay * 1000);\n    } else {\n        playChannel(channel, id);\n    }\n};\n\nmidi.noteOff = function (channel, note, delay) {\n// \t\t\tvar id = noteToKey[note];\n// \t\t\tif (!notes[id]) return;\n// \t\t\tif (delay) {\n// \t\t\t\treturn setTimeout(function() {\n// \t\t\t\t\tstopChannel(channel, id);\n// \t\t\t\t}, delay * 1000)\n// \t\t\t} else {\n// \t\t\t\tstopChannel(channel, id);\n// \t\t\t}\n};\n\nmidi.chordOn = function (channel, chord, velocity, delay) {\n    for (var idx = 0; idx < chord.length; idx++) {\n        var n = chord[idx];\n        var id = noteToKey[n];\n        if (!notes[id]) continue;\n        if (delay) {\n            return setTimeout(function () {\n                playChannel(channel, id);\n            }, delay * 1000);\n        } else {\n            playChannel(channel, id);\n        }\n    }\n};\n\nmidi.chordOff = function (channel, chord, delay) {\n    for (var idx = 0; idx < chord.length; idx++) {\n        var n = chord[idx];\n        var id = noteToKey[n];\n        if (!notes[id]) continue;\n        if (delay) {\n            return setTimeout(function () {\n                stopChannel(channel, id);\n            }, delay * 1000);\n        } else {\n            stopChannel(channel, id);\n        }\n    }\n};\n\nmidi.stopAllNotes = function () {\n    for (var nid = 0, length = audioBuffers.length; nid < length; nid++) {\n        audioBuffers[nid].pause();\n    }\n};\n\nmidi.connect = function (opts, _channels_) {\n    //root.setDefaultPlugin(midi);\n    ///\n    channels = _channels_;\n    for (var key in generalMIDI.keyToNote) {\n        noteToKey[generalMIDI.keyToNote[key]] = key;\n        notes[key] = {id: key};\n    }\n    ///\n    setTimeout(function(){\n        opts.onsuccess && opts.onsuccess()\n    });\n    return this;\n};\nmidi.reconnect = function(){\n\n}\nmodule.exports = midi;\n},{\"../lib/Base64binary\":31,\"./gm\":34,\"tunajs\":25}],38:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n Web Audio API - OGG or MPEG Soundbank\n ----------------------------------------------------------\n http://webaudio.github.io/web-audio-api/\n ----------------------------------------------------------\n */\n\n\n'use strict';\nvar generalMIDI = require('./gm');\nvar Base64Binary = require('../lib/Base64binary');\nvar Tuna = require('tunajs');\nvar audioContext = null; // new AudioContext();\nvar useStreamingBuffer = false; // !!audioContext.createMediaElementSource;\nvar midi = {api: 'webaudio'};\nvar ctx; // audio context\nvar sources = {};\nvar effects = {};\nvar masterVolume = 127;\nvar audioBuffers = {};\nvar channels;\n///\nmidi.audioBuffers = audioBuffers;\nmidi.send = function (data, delay) {\n};\nmidi.setController = function (channelId, type, value, delay) {\n};\n\nmidi.setVolume = function (channelId, volume, delay) {\n    if (delay) {\n        setTimeout(function () {\n            masterVolume = volume;\n        }, delay * 1000);\n    } else {\n        masterVolume = volume;\n    }\n};\n\nmidi.programChange = function (channelId, program, delay) {\n// \t\t\tif (delay) {\n// \t\t\t\treturn setTimeout(function() {\n// \t\t\t\t\tvar channel = channels[channelId];\n// \t\t\t\t\tchannel.instrument = program;\n// \t\t\t\t}, delay);\n// \t\t\t} else {\n\n    var channel = channels[channelId];\n    channel.instrument = program;\n// \t\t\t}\n};\n\nmidi.pitchBend = function (channelId, program, delay) {\n// \t\t\tif (delay) {\n// \t\t\t\tsetTimeout(function() {\n// \t\t\t\t\tvar channel = channels[channelId];\n// \t\t\t\t\tchannel.pitchBend = program;\n// \t\t\t\t}, delay);\n// \t\t\t} else {\n    var channel = channels[channelId];\n    channel.pitchBend = program;\n// \t\t\t}\n};\n\nmidi.noteOn = function (channelId, noteId, velocity, delay) {\n    delay = delay || 0;\n\n    /// check whether the note exists\n    var channel = channels[channelId];\n    var instrument = channel.instrument;\n    var bufferId = instrument + '' + noteId;\n    var buffer = audioBuffers[bufferId];\n    if (!buffer) {\n        console.log(generalMIDI.GM.byId(instrument).id, instrument, channelId);\n        return;\n    }\n\n\n    /// convert relative delay to absolute delay\n    if (delay < ctx.currentTime) {\n        delay += ctx.currentTime;\n    }\n    /// create audio buffer\n    if (useStreamingBuffer) {\n        var source = ctx.createMediaElementSource(buffer);\n    } else { // XMLHTTP buffer\n        var source = ctx.createBufferSource();\n        source.buffer = buffer;\n    }\n\n    /// add effects to buffer\n    if (effects) {\n        var chain = source;\n        for (var key in effects) {\n            chain.connect(effects[key].input);\n            chain = effects[key];\n        }\n    }\n\n    /// add gain + pitchShift\n    source.connect(ctx.destination);\n    source.playbackRate.value = 1; // pitch shift\n    source.gainNode = ctx.createGain(); // gain\n    source.gainNode.connect(ctx.destination);\n    function getGainValue(vol, channelVol, masterVol) {\n        return Math.max(-1, (vol * channelVol / 127) * (masterVol / 127) * 2 - 1);\n    }\n\n    source.gainNode.gain.value = getGainValue(velocity, channel.volume, masterVolume);\n    source.setChannelVolume = function (vol) {\n        source.gainNode.gain.cancelScheduledValues(ctx.currentTime);\n        source.gainNode.gain.value = getGainValue(velocity, vol, masterVolume);\n    };\n    source.channel = channelId;\n    source.connect(source.gainNode);\n    ///\n    if (useStreamingBuffer) {\n        if (delay) {\n            return setTimeout(function () {\n                buffer.currentTime = 0;\n                buffer.play()\n            }, delay * 1000);\n        } else {\n            buffer.currentTime = 0;\n            buffer.play()\n        }\n    } else {\n        source.start(delay || 0);\n    }\n    ///\n    sources[channelId + '' + noteId] = source;\n    ///\n    return source;\n};\n\nmidi.noteOff = function (channelId, noteId, delay) {\n    delay = delay || 0;\n\n    /// check whether the note exists\n    var channel = channels[channelId];\n    var instrument = channel.instrument;\n    var bufferId = instrument + '' + noteId;\n    var buffer = audioBuffers[bufferId];\n    if (buffer) {\n        if (delay < ctx.currentTime) {\n            delay += ctx.currentTime;\n        }\n        ///\n        var source = sources[channelId + '' + noteId];\n        if (source) {\n            if (source.gainNode) {\n                // @Miranet: 'the values of 0.2 and 0.3 could of course be used as\n                // a 'release' parameter for ADSR like time settings.'\n                // add { 'metadata': { release: 0.3 } } to soundfont files\n                var gain = source.gainNode.gain;\n                gain.linearRampToValueAtTime(gain.value, delay);\n                gain.linearRampToValueAtTime(-1.0, delay + 0.3);\n            }\n            ///\n            if (useStreamingBuffer) {\n                if (delay) {\n                    setTimeout(function () {\n                        buffer.pause();\n                    }, delay * 1000);\n                } else {\n                    buffer.pause();\n                }\n            } else {\n                if (source.noteOff) {\n                    source.noteOff(delay + 0.5);\n                } else {\n                    source.stop(delay + 0.5);\n                }\n            }\n            ///\n            delete sources[channelId + '' + noteId];\n            ///\n            return source;\n        }\n    }\n};\n\nmidi.chordOn = function (channel, chord, velocity, delay) {\n    var res = {};\n    for (var n = 0, note, len = chord.length; n < len; n++) {\n        res[note = chord[n]] = midi.noteOn(channel, note, velocity, delay);\n    }\n    return res;\n};\n\nmidi.chordOff = function (channel, chord, delay) {\n    var res = {};\n    for (var n = 0, note, len = chord.length; n < len; n++) {\n        res[note = chord[n]] = midi.noteOff(channel, note, delay);\n    }\n    return res;\n};\n\nmidi.stopAllNotes = function () {\n    for (var sid in sources) {\n        var delay = 0;\n        if (delay < ctx.currentTime) {\n            delay += ctx.currentTime;\n        }\n        var source = sources[sid];\n        source.gain.linearRampToValueAtTime(1, delay);\n        source.gain.linearRampToValueAtTime(0, delay + 0.3);\n        if (source.noteOff) { // old api\n            source.noteOff(delay + 0.3);\n        } else { // new api\n            source.stop(delay + 0.3);\n        }\n        delete sources[sid];\n    }\n};\n\nmidi.setEffects = function (list) {\n    if (ctx.tunajs) {\n        for (var n = 0; n < list.length; n++) {\n            var data = list[n];\n            var effect = new ctx.tunajs[data.type](data);\n            effect.connect(ctx.destination);\n            effects[data.type] = effect;\n        }\n    } else {\n        return console.log('Effects module not installed.');\n    }\n};\n\nmidi.connect = function (opts, _channels_) {\n    //root.setDefaultPlugin(midi);\n    channels = _channels_;\n    midi.setContext(ctx || createAudioContext(), opts.onsuccess);\n    return this;\n};\n\nmidi.getContext = function () {\n    return ctx;\n};\n\nmidi.setContext = function (newCtx, onload, onprogress, onerror) {\n\n    ctx = newCtx;\n    /// tuna.js effects module - https://github.com/Dinahmoe/tuna\n    if (typeof Tuna !== 'undefined' && !ctx.tunajs) {\n        ctx.tunajs = new Tuna(ctx);\n    }\n    /// loading audio files\n    var urls = [];\n    var notes = generalMIDI.keyToNote;\n    for (var key in notes) urls.push(key);\n    ///\n    var waitForEnd = function (instrument) {\n        for (var key in bufferPending) { // has pending items\n            if (bufferPending[key]) return;\n        }\n        ///\n        if (onload) { // run onload once\n            onload();\n            onload = null;\n        }\n    };\n    ///\n    var requestAudio = function (soundfont, instrumentId, index, key) {\n        var url = soundfont[key];\n        if (url) {\n            bufferPending[instrumentId]++;\n            loadAudio(url, function (buffer) {\n                buffer.id = key;\n                var noteId = generalMIDI.keyToNote[key];\n                audioBuffers[instrumentId + '' + noteId] = buffer;\n                ///\n                if (--bufferPending[instrumentId] === 0) {\n                    var percent = index / 87;\n// \t\t\t\t\t\t\tconsole.log(MIDI.GM.byId[instrumentId], 'processing: ', percent);\n                    soundfont.isLoaded = true;\n                    waitForEnd(instrument);\n                }\n            }, function (err) {\n                // \t\t\t\tconsole.log(err);\n            });\n        }\n    };\n    ///\n    var bufferPending = {};\n\n    for (var instrument in window.MIDI.Soundfont) {\n        var soundfont = window.MIDI.Soundfont[instrument];\n\n        if (soundfont.isLoaded) {\n            continue;\n        }\n        ///\n        var synth = generalMIDI.GM.byCleanName(instrument);\n        var instrumentId = synth.number;\n        ///\n        bufferPending[instrumentId] = 0;\n        ///\n        for (var index = 0; index < urls.length; index++) {\n            var key = urls[index];\n            requestAudio(soundfont, instrumentId, index, key);\n        }\n    }\n    ///\n    setTimeout(waitForEnd, 1);\n};\nmidi.reconnect = function(onload, onprogress, onerror){\n    midi.setContext(ctx, onload, onprogress, onerror);\n}\n/* Load audio file: streaming | base64 | arraybuffer\n ---------------------------------------------------------------------- */\nfunction loadAudio(url, onload, onerror) {\n    if (useStreamingBuffer) {\n        var audio = new Audio();\n        audio.src = url;\n        audio.controls = false;\n        audio.autoplay = false;\n        audio.preload = false;\n        audio.addEventListener('canplay', function () {\n            onload && onload(audio);\n        });\n        audio.addEventListener('error', function (err) {\n            onerror && onerror(err);\n        });\n        document.body.appendChild(audio);\n    } else if (url.indexOf('data:audio') === 0) { // Base64 string\n        var base64 = url.split(',')[1];\n        var buffer = Base64Binary.decodeArrayBuffer(base64);\n        ctx.decodeAudioData(buffer, onload, onerror);\n    } else { // XMLHTTP buffer\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function () {\n            ctx.decodeAudioData(request.response, onload, onerror);\n        };\n        request.send();\n    }\n};\n\nfunction createAudioContext() {\n    return new (window.AudioContext || window.webkitAudioContext)();\n};\n\nmodule.exports = midi;\n},{\"../lib/Base64binary\":31,\"./gm\":34,\"tunajs\":25}],39:[function(require,module,exports){\n/*\n ----------------------------------------------------------------------\n Web MIDI API - Native Soundbanks\n ----------------------------------------------------------------------\n http://webaudio.github.io/web-midi-api/\n ----------------------------------------------------------------------\n */\n'use strict';\nrequire('web-midi-api/WebMIDIAPI.min.js');\nvar plugin = null;\nvar output = null;\nvar midi = {api: 'webmidi'};\nmidi.send = function (data, delay) { // set channel volume\n    output.send(data, delay * 1000);\n};\n\nmidi.setController = function (channel, type, value, delay) {\n    output.send([channel, type, value], delay * 1000);\n};\n\nmidi.setVolume = function (channel, volume, delay) { // set channel volume\n    output.send([0xB0 + channel, 0x07, volume], delay * 1000);\n};\n\nmidi.programChange = function (channel, program, delay) { // change patch (instrument)\n    output.send([0xC0 + channel, program], delay * 1000);\n};\n\nmidi.pitchBend = function(channel, program, delay) { // pitch bend\n    output.send([0xE0 + channel, program & 0x7F, program >> 7], delay * 1000);\n};\n\nmidi.noteOn = function (channel, note, velocity, delay) {\n    output.send([0x90 + channel, note, velocity], delay * 1000);\n};\n\nmidi.noteOff = function (channel, note, delay) {\n    output.send([0x80 + channel, note, 0], delay * 1000);\n};\n\nmidi.chordOn = function (channel, chord, velocity, delay) {\n    for (var n = 0; n < chord.length; n++) {\n        var note = chord[n];\n        output.send([0x90 + channel, note, velocity], delay * 1000);\n    }\n};\n\nmidi.chordOff = function (channel, chord, delay) {\n    for (var n = 0; n < chord.length; n++) {\n        var note = chord[n];\n        output.send([0x80 + channel, note, 0], delay * 1000);\n    }\n};\n\nmidi.stopAllNotes = function () {\n    output.cancel();\n    for (var channel = 0; channel < 16; channel++) {\n        output.send([0xB0 + channel, 0x7B, 0]);\n    }\n};\n\nmidi.connect = function (opts) {\n    window.navigator.requestMIDIAccess().then(function (access) {\n        plugin = access;\n        var pluginOutputs = plugin.outputs;\n        if (typeof pluginOutputs == 'function') pluginOutputs = pluginOutputs();  // Chrome pre-43\n        if (pluginOutputs.size > 0) {\n            output = pluginOutputs.values().next().value;\n            opts.onsuccess && opts.onsuccess();\n        }\n    });\n    return this;\n};\n\nmodule.exports = midi;\n},{\"web-midi-api/WebMIDIAPI.min.js\":26}],40:[function(require,module,exports){\n/*\n\t-----------------------------------------------------------\n\tdom.loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be\n\t-----------------------------------------------------------\n\tCopyright 2011-2014 Mudcube. All rights reserved.\n\t-----------------------------------------------------------\n\t/// No verification\n\tdom.loadScript.add(\"../js/jszip/jszip.js\");\n\t/// Strict loading order and verification.\n\tdom.loadScript.add({\n\t\tstrictOrder: true,\n\t\turls: [\n\t\t\t{\n\t\t\t\turl: \"../js/jszip/jszip.js\",\n\t\t\t\tverify: \"JSZip\",\n\t\t\t\tonsuccess: function() {\n\t\t\t\t\tconsole.log(1)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ \n\t\t\t\turl: \"../inc/downloadify/js/swfobject.js\",\n\t\t\t\tverify: \"swfobject\",\n\t\t\t\tonsuccess: function() {\n\t\t\t\t\tconsole.log(2)\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tonsuccess: function() {\n\t\t\tconsole.log(3)\n\t\t}\n\t});\n\t/// Just verification.\n\tdom.loadScript.add({\n\t\turl: \"../js/jszip/jszip.js\",\n\t\tverify: \"JSZip\",\n\t\tonsuccess: function() {\n\t\t\tconsole.log(1)\n\t\t}\n\t});\n*/\n\nif (typeof(dom) === \"undefined\") var dom = {};\n\n(function() { \"use strict\";\n\ndom.loadScript = function() {\n\tthis.loaded = {};\n\tthis.loading = {};\n\treturn this;\n};\n\ndom.loadScript.prototype.add = function(config) {\n\tvar that = this;\n\tif (typeof(config) === \"string\") {\n\t\tconfig = { url: config };\n\t}\n\tvar urls = config.urls;\n\tif (typeof(urls) === \"undefined\") {\n\t\turls = [{ \n\t\t\turl: config.url, \n\t\t\tverify: config.verify\n\t\t}];\n\t}\n\t/// adding the elements to the head\n\tvar doc = document.getElementsByTagName(\"head\")[0];\n\t/// \n\tvar testElement = function(element, test) {\n\t\tif (that.loaded[element.url]) return;\n\t\tif (test && globalExists(test) === false) return;\n\t\tthat.loaded[element.url] = true;\n\t\t//\n\t\tif (that.loading[element.url]) that.loading[element.url]();\n\t\tdelete that.loading[element.url];\n\t\t//\n\t\tif (element.onsuccess) element.onsuccess();\n\t\tif (typeof(getNext) !== \"undefined\") getNext();\n\t};\n\t///\n\tvar hasError = false;\n\tvar batchTest = [];\n\tvar addElement = function(element) {\n\t\tif (typeof(element) === \"string\") {\n\t\t\telement = {\n\t\t\t\turl: element,\n\t\t\t\tverify: config.verify\n\t\t\t};\n\t\t}\n\t\tif (/([\\w\\d.\\[\\]\\'\\\"])$/.test(element.verify)) { // check whether its a variable reference\n\t\t\tvar verify = element.test = element.verify;\n\t\t\tif (typeof(verify) === \"object\") {\n\t\t\t\tfor (var n = 0; n < verify.length; n ++) {\n\t\t\t\t\tbatchTest.push(verify[n]);\n\t\t\t\t}\t\t\t\n\t\t\t} else {\n\t\t\t\tbatchTest.push(verify);\n\t\t\t}\n\t\t}\n\t\tif (that.loaded[element.url]) return;\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onreadystatechange = function() {\n\t\t\tif (this.readyState !== \"loaded\" && this.readyState !== \"complete\") return;\n\t\t\ttestElement(element);\n\t\t};\n\t\tscript.onload = function() {\n\t\t\ttestElement(element);\n\t\t};\n\t\tscript.onerror = function() {\n\t\t\thasError = true;\n\t\t\tdelete that.loading[element.url];\n\t\t\tif (typeof(element.test) === \"object\") {\n\t\t\t\tfor (var key in element.test) {\n\t\t\t\t\tremoveTest(element.test[key]);\n\t\t\t\t}\t\t\t\n\t\t\t} else {\n\t\t\t\tremoveTest(element.test);\n\t\t\t}\n\t\t};\n\t\tscript.setAttribute(\"type\", \"text/javascript\");\n\t\tscript.setAttribute(\"src\", element.url);\n\t\tdoc.appendChild(script);\n\t\tthat.loading[element.url] = function() {};\n\t};\n\t/// checking to see whether everything loaded properly\n\tvar removeTest = function(test) {\n\t\tvar ret = [];\n\t\tfor (var n = 0; n < batchTest.length; n ++) {\n\t\t\tif (batchTest[n] === test) continue;\n\t\t\tret.push(batchTest[n]);\n\t\t}\n\t\tbatchTest = ret;\n\t};\n\tvar onLoad = function(element) {\n\t\tif (element) {\n\t\t\ttestElement(element, element.test);\n\t\t} else {\n\t\t\tfor (var n = 0; n < urls.length; n ++) {\n\t\t\t\ttestElement(urls[n], urls[n].test);\n\t\t\t}\n\t\t}\n\t\tvar istrue = true;\n\t\tfor (var n = 0; n < batchTest.length; n ++) {\n\t\t\tif (globalExists(batchTest[n]) === false) {\n\t\t\t\tistrue = false;\n\t\t\t}\n\t\t}\n\t\tif (!config.strictOrder && istrue) { // finished loading all the requested scripts\n\t\t\tif (hasError) {\n\t\t\t\tif (config.error) {\n\t\t\t\t\tconfig.error();\n\t\t\t\t}\n\t\t\t} else if (config.onsuccess) {\n\t\t\t\tconfig.onsuccess();\n\t\t\t}\n\t\t} else { // keep calling back the function\n\t\t\tsetTimeout(function() { //- should get slower over time?\n\t\t\t\tonLoad(element);\n\t\t\t}, 10);\n\t\t}\n\t};\n\t/// loading methods;  strict ordering or loose ordering\n\tif (config.strictOrder) {\n\t\tvar ID = -1;\n\t\tvar getNext = function() {\n\t\t\tID ++;\n\t\t\tif (!urls[ID]) { // all elements are loaded\n\t\t\t\tif (hasError) {\n\t\t\t\t\tif (config.error) {\n\t\t\t\t\t\tconfig.error();\n\t\t\t\t\t}\n\t\t\t\t} else if (config.onsuccess) {\n\t\t\t\t\tconfig.onsuccess();\n\t\t\t\t}\n\t\t\t} else { // loading new script\n\t\t\t\tvar element = urls[ID];\n\t\t\t\tvar url = element.url;\n\t\t\t\tif (that.loading[url]) { // already loading from another call (attach to event)\n\t\t\t\t\tthat.loading[url] = function() {\n\t\t\t\t\t\tif (element.onsuccess) element.onsuccess();\n\t\t\t\t\t\tgetNext();\n\t\t\t\t\t}\n\t\t\t\t} else if (!that.loaded[url]) { // create script element\n\t\t\t\t\taddElement(element);\n\t\t\t\t\tonLoad(element);\n\t\t\t\t} else { // it's already been successfully loaded\n\t\t\t\t\tgetNext();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tgetNext();\n\t} else { // loose ordering\n\t\tfor (var ID = 0; ID < urls.length; ID ++) {\n\t\t\taddElement(urls[ID]);\n\t\t\tonLoad(urls[ID]);\n\t\t}\n\t}\n};\n\ndom.loadScript = new dom.loadScript();\n\nvar globalExists = function(path, root) {\n\ttry {\n\t\tpath = path.split('\"').join('').split(\"'\").join('').split(']').join('').split('[').join('.');\n\t\tvar parts = path.split(\".\");\n\t\tvar length = parts.length;\n\t\tvar object = root || window;\n\t\tfor (var n = 0; n < length; n ++) {\n\t\t\tvar key = parts[n];\n\t\t\tif (object[key] == null) {\n\t\t\t\treturn false;\n\t\t\t} else { //\n\t\t\t\tobject = object[key];\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} catch(e) {\n\t\treturn false;\n\t}\n};\n\n})();\n\n/// For NodeJS\nif (typeof (module) !== \"undefined\" && module.exports) {\n\tmodule.exports = dom;\n}\n},{}],41:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n util/Request : 0.1.1 : 2015-03-26\n ----------------------------------------------------------\n util.request({\n url: './dir/something.extension',\n data: 'test!',\n format: 'text', // text | xml | json | binary\n responseType: 'text', // arraybuffer | blob | document | json | text\n headers: {},\n withCredentials: true, // true | false\n ///\n onerror: function(evt, percent) {\n console.log(evt);\n },\n onsuccess: function(evt, responseText) {\n console.log(responseText);\n },\n onprogress: function(evt, percent) {\n percent = Math.round(percent * 100);\n loader.create('thread', 'loading... ', percent);\n }\n });\n */\n\n\n\n\nvar request = function (opts, onsuccess, onerror, onprogress) {\n    'use strict';\n    if (typeof opts === 'string') opts = {url: opts};\n    ///\n    var data = opts.data;\n    var url = opts.url;\n    var method = opts.method || (opts.data ? 'POST' : 'GET');\n    var format = opts.format;\n    var headers = opts.headers;\n    var responseType = opts.responseType;\n    var withCredentials = opts.withCredentials || false;\n    ///\n    var onsuccess = onsuccess || opts.onsuccess;\n    var onerror = onerror || opts.onerror;\n    var onprogress = onprogress || opts.onprogress;\n    ///\n    if (typeof NodeFS !== 'undefined' && root.loc.isLocalUrl(url)) {\n        NodeFS.readFile(url, 'utf8', function (err, res) {\n            if (err) {\n                onerror && onerror(err);\n            } else {\n                onsuccess && onsuccess({responseText: res});\n            }\n        });\n        return;\n    }\n    ///\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    ///\n    if (headers) {\n        for (var type in headers) {\n            xhr.setRequestHeader(type, headers[type]);\n        }\n    } else if (data) { // set the default headers for POST\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    }\n    if (format === 'binary') { //- default to responseType=\"blob\" when supported\n        if (xhr.overrideMimeType) {\n            xhr.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n    }\n    if (responseType) {\n        xhr.responseType = responseType;\n    }\n    if (withCredentials) {\n        xhr.withCredentials = 'true';\n    }\n    if (onerror && 'onerror' in xhr) {\n        xhr.onerror = onerror;\n    }\n    if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n        if (data) {\n            xhr.upload.onprogress = function (evt) {\n                onprogress.call(xhr, evt, event.loaded / event.total);\n            };\n        } else {\n            xhr.addEventListener('progress', function (evt) {\n                var totalBytes = 0;\n                if (evt.lengthComputable) {\n                    totalBytes = evt.total;\n                } else if (xhr.totalBytes) {\n                    totalBytes = xhr.totalBytes;\n                } else {\n                    var rawBytes = parseInt(xhr.getResponseHeader('Content-Length-Raw'));\n                    if (isFinite(rawBytes)) {\n                        xhr.totalBytes = totalBytes = rawBytes;\n                    } else {\n                        return;\n                    }\n                }\n                onprogress.call(xhr, evt, evt.loaded / totalBytes);\n            });\n        }\n    }\n    ///\n    xhr.onreadystatechange = function (evt) {\n        if (xhr.readyState === 4) { // The request is complete\n            if (xhr.status === 200 || // Response OK\n                xhr.status === 304 || // Not Modified\n                xhr.status === 308 || // Permanent Redirect\n                xhr.status === 0 && root.client.cordova // Cordova quirk\n            ) {\n                if (onsuccess) {\n                    var res;\n                    if (format === 'xml') {\n                        res = evt.target.responseXML;\n                    } else if (format === 'text') {\n                        res = evt.target.responseText;\n                    } else if (format === 'json') {\n                        try {\n                            res = JSON.parse(evt.target.response);\n                        } catch (err) {\n                            onerror && onerror.call(xhr, evt);\n                        }\n                    }\n                    ///\n                    onsuccess.call(xhr, evt, res);\n                }\n            } else {\n                onerror && onerror.call(xhr, evt);\n            }\n        }\n    };\n    xhr.send(data);\n    return xhr;\n};\n\nmodule.exports = request;\n\n},{}]},{},[32]);\n"],"file":"bundle.js","sourceRoot":"/source/"}