{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * lodash 3.3.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseIsEqual = require('lodash._baseisequal'),\n    bindCallback = require('lodash._bindcallback'),\n    isArray = require('lodash.isarray'),\n    pairs = require('lodash.pairs');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} matchData The propery names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = toObject(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.matches` which does not clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value && (value !== undefined || (key in toObject(object)));\n    };\n  }\n  return function(object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to compare.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  var isArr = isArray(path),\n      isCommon = isKey(path) && isStrictComparable(srcValue),\n      pathKey = (path + '');\n\n  path = toPath(path);\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    var key = pathKey;\n    object = toObject(object);\n    if ((isArr || !isCommon) && !(key in object)) {\n      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n      if (object == null) {\n        return false;\n      }\n      key = last(path);\n      object = toObject(object);\n    }\n    return object[key] === srcValue\n      ? (srcValue !== undefined || (key in object))\n      : baseIsEqual(srcValue, object[key], undefined, true);\n  };\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Gets the propery names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = baseCallback;\n\n},{\"lodash._baseisequal\":5,\"lodash._bindcallback\":6,\"lodash.isarray\":10,\"lodash.pairs\":13}],2:[function(require,module,exports){\n/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = require('lodash.keys');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseEach;\n\n},{\"lodash.keys\":12}],3:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n * without support for callback shorthands and `this` binding, which iterates\n * over `collection` using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @param {boolean} [retKey] Specify returning the key of the found element\n *  instead of the element itself.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFind(collection, predicate, eachFunc, retKey) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = retKey ? key : value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFind;\n\n},{}],4:[function(require,module,exports){\n/**\n * lodash 3.6.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n},{}],5:[function(require,module,exports){\n/**\n * lodash 3.0.7 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArray = require('lodash.isarray'),\n    isTypedArray = require('lodash.istypedarray'),\n    keys = require('lodash.keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `_.some` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing arrays.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} value The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseIsEqual;\n\n},{\"lodash.isarray\":10,\"lodash.istypedarray\":11,\"lodash.keys\":12}],6:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n\n},{}],7:[function(require,module,exports){\n/**\n * lodash 3.9.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = getNative;\n\n},{}],8:[function(require,module,exports){\n/**\n * lodash 3.2.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCallback = require('lodash._basecallback'),\n    baseEach = require('lodash._baseeach'),\n    baseFind = require('lodash._basefind'),\n    baseFindIndex = require('lodash._basefindindex'),\n    isArray = require('lodash.isarray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.result(_.find(users, function(chr) {\n *   return chr.age < 40;\n * }), 'user');\n * // => 'barney'\n *\n * // using the `_.matches` callback shorthand\n * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n * // => 'pebbles'\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.result(_.find(users, 'active', false), 'user');\n * // => 'fred'\n *\n * // using the `_.property` callback shorthand\n * _.result(_.find(users, 'active'), 'user');\n * // => 'barney'\n */\nvar find = createFind(baseEach);\n\nmodule.exports = find;\n\n},{\"lodash._basecallback\":1,\"lodash._baseeach\":2,\"lodash._basefind\":3,\"lodash._basefindindex\":4,\"lodash.isarray\":10}],9:[function(require,module,exports){\n/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n\n},{}],10:[function(require,module,exports){\n/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isArray;\n\n},{}],11:[function(require,module,exports){\n/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n},{}],12:[function(require,module,exports){\n/**\n * lodash 3.1.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = require('lodash._getnative'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n},{\"lodash._getnative\":7,\"lodash.isarguments\":9,\"lodash.isarray\":10}],13:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = require('lodash.keys');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n\n},{\"lodash.keys\":12}],14:[function(require,module,exports){\nmodule.exports={\n  \"Piano\": {\n    \"Acoustic Grand Piano\": 0,\n    \"Bright Acoustic Piano\": 1,\n    \"Electric Grand Piano\": 2,\n    \"Honky-tonk Piano\": 3,\n    \"Electric Piano 1\": 4,\n    \"Electric Piano 2\": 5,\n    \"Harpsichord\":6,\n    \"Clavinet\": 7\n  },\n  \"Chromatic Percussion\": {\n    \"Celesta\": 8,\n    \"Glockenspiel\": 9,\n    \"Music Box\": 10,\n    \"Vibraphone\": 11,\n    \"Marimba\": 12,\n    \"Xylophone\": 13,\n    \"Tubular Bells\": 14,\n    \"Dulcimer\": 15\n  },\n  \"Organ\": {\n    \"Drawbar Organ\": 16,\n    \"Percussive Organ\": 17,\n    \"Rock Organ\": 18,\n    \"Church Organ\": 19,\n    \"Reed Organ\": 20,\n    \"Accordion\": 21,\n    \"Harmonica\": 22,\n    \"Tango Accordion\": 23\n  },\n  \"Guitar\": {\n    \"Acoustic Guitar (nylon)\": 24,\n    \"Acoustic Guitar (steel)\": 25,\n    \"Electric Guitar (jazz)\": 26,\n    \"Electric Guitar (clean)\": 27,\n    \"Electric Guitar (muted)\": 28,\n    \"Overdriven Guitar\": 29,\n    \"Distortion Guitar\": 30,\n    \"Guitar Harmonics\": 31\n  },\n  \"Bass\": {\n    \"Acoustic Bass\": 32,\n    \"Electric Bass (finger)\": 33,\n    \"Electric Bass (pick)\": 34,\n    \"Fretless Bass\": 35,\n    \"Slap Bass 1\": 36,\n    \"Slap Bass 2\": 37,\n    \"Synth Bass 1\": 38,\n    \"Synth Bass 2\": 39\n  },\n  \"Strings\": {\n    \"Violin\": 40,\n    \"Viola\": 41,\n    \"Cello\": 42,\n    \"Contrabass\": 43,\n    \"Tremolo Strings\": 44,\n    \"Pizzicato Strings\": 45,\n    \"Orchestral Harp\": 46,\n    \"Timpani\": 47\n  },\n  \"Brass\": {\n    \"Trumpet\": 56,\n    \"Trombone\": 57,\n    \"Tuba\": 58,\n    \"Muted Trumpet\": 59,\n    \"French Horn\": 60,\n    \"Brass Section\": 61,\n    \"Synth Brass 1\": 62,\n    \"Synth Brass 2\": 63\n  },\n  \"Reed\": {\n    \"Soprano Sax\": 64,\n    \"Alto Sax\": 65,\n    \"Tenor Sax\": 66,\n    \"Baritone Sax\": 67,\n    \"Oboe\": 68,\n    \"English Horn\": 69,\n    \"Bassoon\": 70,\n    \"Clarinet\": 71\n  },\n  \"Pipe\": {\n    \"Piccolo\": 72,\n    \"Flute\": 73,\n    \"Recorder\": 74,\n    \"Pan Flute\": 75,\n    \"Blown Bottle\": 76,\n    \"Shakuhachi\": 77,\n    \"Whistle\": 78,\n    \"Ocarina\": 79\n  },\n  \"Synth Lead\": {\n    \"Lead 1 (square)\": 80,\n    \"Lead 2 (sawtooth)\": 81,\n    \"Lead 3 (calliope)\": 82,\n    \"Lead 4 (chiff)\": 83,\n    \"Lead 5 (charang)\": 84,\n    \"Lead 6 (voice)\": 85,\n    \"Lead 7 (fifths)\": 86,\n    \"Lead 8 (bass + lead)\": 87\n  },\n  \"Synth Pad\": {\n    \"Pad 1 (new age)\": 88,\n    \"Pad 2 (warm)\": 89,\n    \"Pad 3 (polysynth)\": 90,\n    \"Pad 4 (choir)\": 91,\n    \"Pad 5 (bowed)\": 92,\n    \"Pad 6 (metallic)\": 93,\n    \"Pad 7 (halo)\": 94,\n    \"Pad 8 (sweep)\": 95\n  },\n  \"Synth Effects\": {\n    \"FX 1 (rain)\": 96,\n    \"FX 2 (soundtrack)\": 97,\n    \"FX 3 (crystal)\": 98,\n    \"FX 4 (atmosphere)\": 99,\n    \"FX 5 (brightness)\": 100,\n    \"FX 6 (goblins)\": 101,\n    \"FX 7 (echoes)\": 102,\n    \"FX 8 (sci-fi)\": 103\n  },\n  \"Ethnic\": {\n    \"Sitar\": 104,\n    \"Banjo\": 105,\n    \"Shamisen\": 106,\n    \"Koto\": 107,\n    \"Kalimba\": 108,\n    \"Bagpipe\": 109,\n    \"Fiddle\": 110,\n    \"Shanai\": 111\n  },\n  \"Percussive\": {\n    \"Tinkle Bell\": 112,\n    \"Agogo\": 113,\n    \"Steel Drums\": 114,\n    \"Woodblock\": 115,\n    \"Taiko Drum\": 116,\n    \"Melodic Tom\": 117,\n    \"Synth Drum\": 118\n  },\n  \"Sound effects\": {\n    \"Reverse Cymbal\": 119,\n    \"Guitar Fret Noise\": 120,\n    \"Breath Noise\": 121,\n    \"Seashore\": 122,\n    \"Bird Tweet\": 123,\n    \"Telephone Ring\": 124,\n    \"Helicopter\": 125,\n    \"Applause\": 126,\n    \"Gunshot\": 127\n  },\n  \"Percussion\": {\n    \"Bass Drum 2\": 35,\n    \"Bass Drum 1\": 36,\n    \"Side Stick/Rimshot\": 37,\n    \"Snare Drum 1\": 38,\n    \"Hand Clap\": 39,\n    \"Snare Drum 2\": 40,\n    \"Low Tom 2\": 41,\n    \"Closed Hi-hat\": 42,\n    \"Low Tom 1\": 43,\n    \"Pedal Hi-hat\": 44,\n    \"Mid Tom 2\": 45,\n    \"Open Hi-hat\": 46,\n    \"Mid Tom 1\": 47,\n    \"High Tom 2\": 48,\n    \"Crash Cymbal 1\": 49,\n    \"High Tom 1\": 50,\n    \"Ride Cymbal 1\": 51,\n    \"Chinese Cymbal\": 52,\n    \"Ride Bell\": 53,\n    \"Tambourine\": 54,\n    \"Splash Cymbal\": 55,\n    \"Cowbell\": 56,\n    \"Crash Cymbal 2\": 57,\n    \"Vibra Slap\": 58,\n    \"Ride Cymbal 2\": 59,\n    \"High Bongo\": 60,\n    \"Low Bongo\": 61,\n    \"Mute High Conga\": 62,\n    \"Open High Conga\": 63,\n    \"Low Conga\": 64,\n    \"High Timbale\": 65,\n    \"Low Timbale\": 66,\n    \"High Agogô\": 67,\n    \"Low Agogô\": 68,\n    \"Cabasa\": 69,\n    \"Maracas\": 70,\n    \"Short Whistle\": 71,\n    \"Long Whistle\": 72,\n    \"Short Güiro\": 73,\n    \"Long Güiro\": 74,\n    \"Claves\": 75,\n    \"High Wood Block\": 76,\n    \"Low Wood Block\": 77,\n    \"Mute Cuíca\": 78,\n    \"Open Cuíca\": 79,\n    \"Mute Triangle\": 80,\n    \"Open Triangle\": 81\n  }\n}\n\n},{}],15:[function(require,module,exports){\n/*\nclass to parse the .mid file format\n(depends on stream.js)\n*/\nmodule.exports = function (data) {\n\tvar Stream = require('./stream');\n\tvar ticksPerBeat;\n\tfunction readChunk(stream) {\n\t\tvar id = stream.read(4);\n\t\tvar length = stream.readInt32();\n\t\treturn {\n\t\t\t'id': id,\n\t\t\t'length': length,\n\t\t\t'data': stream.read(length)\n\t\t};\n\t}\n\t\n\tvar lastEventTypeByte;\n\t\n\tfunction readEvent(stream) {\n\t\tvar event = {};\n\t\tevent.deltaTime = stream.readVarInt();\n\t\tvar eventTypeByte = stream.readInt8();\n\t\tif ((eventTypeByte & 0xf0) == 0xf0) {\n\t\t\t/* system / meta event */\n\t\t\tif (eventTypeByte == 0xff) {\n\t\t\t\t/* meta event */\n\t\t\t\tevent.type = 'meta';\n\t\t\t\tvar subtypeByte = stream.readInt8();\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tswitch(subtypeByte) {\n\t\t\t\t\tcase 0x00:\n\t\t\t\t\t\tevent.subtype = 'sequenceNumber';\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for sequenceNumber event is 2, got \" + length;\n\t\t\t\t\t\tevent.number = stream.readInt16();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x01:\n\t\t\t\t\t\tevent.subtype = 'text';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x02:\n\t\t\t\t\t\tevent.subtype = 'copyrightNotice';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x03:\n\t\t\t\t\t\tevent.subtype = 'trackName';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x04:\n\t\t\t\t\t\tevent.subtype = 'instrumentName';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x05:\n\t\t\t\t\t\tevent.subtype = 'lyrics';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x06:\n\t\t\t\t\t\tevent.subtype = 'marker';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x07:\n\t\t\t\t\t\tevent.subtype = 'cuePoint';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x20:\n\t\t\t\t\t\tevent.subtype = 'midiChannelPrefix';\n\t\t\t\t\t\tif (length != 1) throw \"Expected length for midiChannelPrefix event is 1, got \" + length;\n\t\t\t\t\t\tevent.channel = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x2f:\n\t\t\t\t\t\tevent.subtype = 'endOfTrack';\n\t\t\t\t\t\tif (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length;\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x51:\n\t\t\t\t\t\tevent.subtype = 'setTempo';\n\t\t\t\t\t\tif (length != 3) throw \"Expected length for setTempo event is 3, got \" + length;\n\t\t\t\t\t\tevent.microsecondsPerBeat = (\n\t\t\t\t\t\t\t(stream.readInt8() << 16)\n\t\t\t\t\t\t\t+ (stream.readInt8() << 8)\n\t\t\t\t\t\t\t+ stream.readInt8()\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x54:\n\t\t\t\t\t\tevent.subtype = 'smpteOffset';\n\t\t\t\t\t\tif (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length;\n\t\t\t\t\t\tvar hourByte = stream.readInt8();\n\t\t\t\t\t\tevent.frameRate = {\n\t\t\t\t\t\t\t0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n\t\t\t\t\t\t}[hourByte & 0x60];\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f;\n\t\t\t\t\t\tevent.min = stream.readInt8();\n\t\t\t\t\t\tevent.sec = stream.readInt8();\n\t\t\t\t\t\tevent.frame = stream.readInt8();\n\t\t\t\t\t\tevent.subframe = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x58:\n\t\t\t\t\t\tevent.subtype = 'timeSignature';\n\t\t\t\t\t\tif (length != 4) throw \"Expected length for timeSignature event is 4, got \" + length;\n\t\t\t\t\t\tevent.numerator = stream.readInt8();\n\t\t\t\t\t\tevent.denominator = Math.pow(2, stream.readInt8());\n\t\t\t\t\t\tevent.metronome = stream.readInt8();\n\t\t\t\t\t\tevent.thirtyseconds = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x59:\n\t\t\t\t\t\tevent.subtype = 'keySignature';\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for keySignature event is 2, got \" + length;\n\t\t\t\t\t\tevent.key = stream.readInt8(true);\n\t\t\t\t\t\tevent.scale = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x7f:\n\t\t\t\t\t\tevent.subtype = 'sequencerSpecific';\n\t\t\t\t\t\tevent.data = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// console.log(\"Unrecognised meta event subtype: \" + subtypeByte);\n\t\t\t\t\t\tevent.subtype = 'unknown'\n\t\t\t\t\t\tevent.data = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else if (eventTypeByte == 0xf0) {\n\t\t\t\tevent.type = 'sysEx';\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else if (eventTypeByte == 0xf7) {\n\t\t\t\tevent.type = 'dividedSysEx';\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else {\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte;\n\t\t\t}\n\t\t} else {\n\t\t\t/* channel event */\n\t\t\tvar param1;\n\t\t\tif ((eventTypeByte & 0x80) == 0) {\n\t\t\t\t/* running status - reuse lastEventTypeByte as the event type.\n\t\t\t\t\teventTypeByte is actually the first parameter\n\t\t\t\t*/\n\t\t\t\tparam1 = eventTypeByte;\n\t\t\t\teventTypeByte = lastEventTypeByte;\n\t\t\t} else {\n\t\t\t\tparam1 = stream.readInt8();\n\t\t\t\tlastEventTypeByte = eventTypeByte;\n\t\t\t}\n\t\t\tvar eventType = eventTypeByte >> 4;\n\t\t\tevent.channel = eventTypeByte & 0x0f;\n\t\t\tevent.type = 'channel';\n\t\t\tswitch (eventType) {\n\t\t\t\tcase 0x08:\n\t\t\t\t\tevent.subtype = 'noteOff';\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.velocity = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x09:\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.velocity = stream.readInt8();\n\t\t\t\t\tif (event.velocity == 0) {\n\t\t\t\t\t\tevent.subtype = 'noteOff';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevent.subtype = 'noteOn';\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0a:\n\t\t\t\t\tevent.subtype = 'noteAftertouch';\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.amount = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0b:\n\t\t\t\t\tevent.subtype = 'controller';\n\t\t\t\t\tevent.controllerType = param1;\n\t\t\t\t\tevent.value = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0c:\n\t\t\t\t\tevent.subtype = 'programChange';\n\t\t\t\t\tevent.programNumber = param1;\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0d:\n\t\t\t\t\tevent.subtype = 'channelAftertouch';\n\t\t\t\t\tevent.amount = param1;\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0e:\n\t\t\t\t\tevent.subtype = 'pitchBend';\n\t\t\t\t\tevent.value = param1 + (stream.readInt8() << 7);\n\t\t\t\t\treturn event;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\n\t\t\t\t\t/* \n\t\t\t\t\tconsole.log(\"Unrecognised MIDI event type: \" + eventType);\n\t\t\t\t\tstream.readInt8();\n\t\t\t\t\tevent.subtype = 'unknown';\n\t\t\t\t\treturn event;\n\t\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar stream = Stream(data);\n\tvar headerChunk = readChunk(stream);\n\tif (headerChunk.id != 'MThd' || headerChunk.length != 6) {\n\t\tthrow \"Bad .mid file - header not found\";\n\t}\n\tvar headerStream = Stream(headerChunk.data);\n\tvar formatType = headerStream.readInt16();\n\tvar trackCount = headerStream.readInt16();\n\tvar timeDivision = headerStream.readInt16();\n\t\n\tif (timeDivision & 0x8000) {\n\t\tthrow \"Expressing time division in SMTPE frames is not supported yet\"\n\t} else {\n\t\tticksPerBeat = timeDivision;\n\t}\n\t\n\tvar header = {\n\t\t'formatType': formatType,\n\t\t'trackCount': trackCount,\n\t\t'ticksPerBeat': ticksPerBeat\n\t};\n\n\tvar tracks = [];\n\tfor (var i = 0; i < header.trackCount; i++) {\n\t\ttracks[i] = [];\n\t\tvar trackChunk = readChunk(stream);\n\t\tif (trackChunk.id != 'MTrk') {\n\t\t\tthrow \"Unexpected chunk - expected MTrk, got \"+ trackChunk.id;\n\t\t}\n\t\tvar trackStream = Stream(trackChunk.data);\n\t\twhile (!trackStream.eof()) {\n\t\t\tvar event = readEvent(trackStream);\n\t\t\ttracks[i].push(event);\n\t\t}\n\t}\n\t\n\treturn {\n\t\t'header': header,\n\t\t'tracks': tracks\n\t}\n};\n},{\"./stream\":17}],16:[function(require,module,exports){\nvar clone = function (o) {\n\tif (typeof o != 'object') return (o);\n\tif (o == null) return (o);\n\tvar ret = (typeof o.length == 'number') ? [] : {};\n\tfor (var key in o) ret[key] = clone(o[key]);\n\treturn ret;\n};\n\nmodule.exports = function (midiFile, timeWarp, eventProcessor, bpm) {\n\tvar trackStates = [];\n\tvar beatsPerMinute = bpm ? bpm : 120;\n\tvar bpmOverride = bpm ? true : false;\n\n\tvar ticksPerBeat = midiFile.header.ticksPerBeat;\n\t\n\tfor (var i = 0; i < midiFile.tracks.length; i++) {\n\t\ttrackStates[i] = {\n\t\t\t'nextEventIndex': 0,\n\t\t\t'ticksToNextEvent': (\n\t\t\t\tmidiFile.tracks[i].length ?\n\t\t\t\t\tmidiFile.tracks[i][0].deltaTime :\n\t\t\t\t\tnull\n\t\t\t)\n\t\t};\n\t}\n\n\tvar nextEventInfo;\n\tvar samplesToNextEvent = 0;\n\t\n\tfunction getNextEvent() {\n\t\tvar ticksToNextEvent = null;\n\t\tvar nextEventTrack = null;\n\t\tvar nextEventIndex = null;\n\t\t\n\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\tif (\n\t\t\t\ttrackStates[i].ticksToNextEvent != null\n\t\t\t\t&& (ticksToNextEvent == null || trackStates[i].ticksToNextEvent < ticksToNextEvent)\n\t\t\t) {\n\t\t\t\tticksToNextEvent = trackStates[i].ticksToNextEvent;\n\t\t\t\tnextEventTrack = i;\n\t\t\t\tnextEventIndex = trackStates[i].nextEventIndex;\n\t\t\t}\n\t\t}\n\t\tif (nextEventTrack != null) {\n\t\t\t/* consume event from that track */\n\t\t\tvar nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex];\n\t\t\tif (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\n\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent += midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime;\n\t\t\t} else {\n\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent = null;\n\t\t\t}\n\t\t\ttrackStates[nextEventTrack].nextEventIndex += 1;\n\t\t\t/* advance timings on all tracks by ticksToNextEvent */\n\t\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\t\tif (trackStates[i].ticksToNextEvent != null) {\n\t\t\t\t\ttrackStates[i].ticksToNextEvent -= ticksToNextEvent\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t\"ticksToEvent\": ticksToNextEvent,\n\t\t\t\t\"event\": nextEvent,\n\t\t\t\t\"track\": nextEventTrack\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t//\n\tvar midiEvent;\n\tvar temporal = [];\n\t//\n\tfunction processEvents() {\n\t\tfunction processNext() {\n\t\t    if (!bpmOverride && midiEvent.event.type == \"meta\" && midiEvent.event.subtype == \"setTempo\" ) {\n\t\t\t\t// tempo change events can occur anywhere in the middle and affect events that follow\n\t\t\t\tbeatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat;\n\t\t\t}\n\t\t\t///\n\t\t\tvar beatsToGenerate = 0;\n\t\t\tvar secondsToGenerate = 0;\n\t\t\tif (midiEvent.ticksToEvent > 0) {\n\t\t\t\tbeatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;\n\t\t\t\tsecondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);\n\t\t\t}\n\t\t\t///\n\t\t\tvar time = (secondsToGenerate * 1000 * timeWarp) || 0;\n\t\t\ttemporal.push([ midiEvent, time]);\n\t\t\tmidiEvent = getNextEvent();\n\t\t};\n\t\t///\n\t\tif (midiEvent = getNextEvent()) {\n\t\t\twhile(midiEvent) processNext(true);\n\t\t}\n\t}\n\tprocessEvents();\n\n\treturn {\n\t\t\"getData\": function() {\n\t\t\treturn clone(temporal);\n\t\t}\n\t};\n};\n\n},{}],17:[function(require,module,exports){\n/* Wrapper for accessing strings through sequential reads */\nmodule.exports = function (str) {\n    var position = 0;\n\n    function read(length) {\n        var result = str.substr(position, length);\n        position += length;\n        return result;\n    }\n\n    /* read a big-endian 32-bit integer */\n    function readInt32() {\n        var result = (\n        (str.charCodeAt(position) << 24)\n        + (str.charCodeAt(position + 1) << 16)\n        + (str.charCodeAt(position + 2) << 8)\n        + str.charCodeAt(position + 3));\n        position += 4;\n        return result;\n    }\n\n    /* read a big-endian 16-bit integer */\n    function readInt16() {\n        var result = (\n        (str.charCodeAt(position) << 8)\n        + str.charCodeAt(position + 1));\n        position += 2;\n        return result;\n    }\n\n    /* read an 8-bit integer */\n    function readInt8(signed) {\n        var result = str.charCodeAt(position);\n        if (signed && result > 127) result -= 256;\n        position += 1;\n        return result;\n    }\n\n    function eof() {\n        return position >= str.length;\n    }\n\n    /* read a MIDI-style variable-length integer\n     (big-endian value in groups of 7 bits,\n     with top bit set to signify that another byte follows)\n     */\n    function readVarInt() {\n        var result = 0;\n        while (true) {\n            var b = readInt8();\n            if (b & 0x80) {\n                result += (b & 0x7f);\n                result <<= 7;\n            } else {\n                /* b is the last byte */\n                return result + b;\n            }\n        }\n    }\n\n    return {\n        'eof': eof,\n        'read': read,\n        'readInt32': readInt32,\n        'readInt16': readInt16,\n        'readInt8': readInt8,\n        'readVarInt': readVarInt\n    }\n};\n},{}],18:[function(require,module,exports){\nvar midi = function () {\n    var api = {};\n    var loader = require('./midi/loader')();\n    var player = require('./midi/player')();\n    return loader;\n};\n\nmodule.exports = midi;\nwindow.globalmidi = midi;\n},{\"./midi/loader\":20,\"./midi/player\":21}],19:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n GeneralMIDI\n ----------------------------------------------------------\n */\nvar root = {};\nvar _ = {\n    find: require('lodash.find')\n};\nroot.GM = (function () {\n    var instruments = require('../instruments.json');\n\n    var clean = function (name) {\n        return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase();\n    };\n\n    var res = {\n        byId: function(id){\n            var ins;\n            _.find(instruments, function(categorie, key){\n                var result = _.find(categorie, function(instrument, key){\n                    if(instrument == id){\n                        ins = {};\n                        ins.instrument = key;\n                        ins.number = instrument;\n                        ins.id = clean(key);\n                        return true;\n                    }\n                });\n                if(result){\n                    ins.category = key;\n                    return true;\n                }\n            });\n\n            return ins;\n        },\n        byName: function(name){\n            var ins;\n            _.find(instruments, function(categorie, key){\n                var result = _.find(categorie, function(instrument, key){\n                    if(name == key){\n                        ins = {};\n                        ins.instrument = key;\n                        ins.number = instrument;\n                        ins.id = clean(key);\n                        return true;\n                    }\n                });\n                if(result){\n                    ins.category = key;\n                    return true;\n                }\n            });\n\n            return ins;\n        },\n        byCleanName: function(name){\n            var ins;\n            _.find(instruments, function(categorie, key){\n                var result = _.find(categorie, function(instrument, key){\n                    if(name == clean(key)){\n                        ins = {};\n                        ins.instrument = key;\n                        ins.number = instrument;\n                        ins.id = clean(key);\n                        return true;\n                    }\n                });\n                if(result){\n                    ins.category = key;\n                    return true;\n                }\n            });\n\n            return ins;\n        },\n        byCategory: function(cat){\n            return _.find(instruments, function(categorie, key){\n                return cat == key;\n            })\n        }\n    };\n\n    return res;\n})();\n\n/* get/setInstrument\n --------------------------------------------------- */\nroot.getInstrument = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.instrument;\n};\n\nroot.setInstrument = function (channelId, program, delay) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.instrument = program;\n        }, delay);\n    } else {\n        channel.instrument = program;\n    }\n};\n\n/* get/setMono\n --------------------------------------------------- */\nroot.getMono = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.mono;\n};\n\nroot.setMono = function (channelId, truthy, delay) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.mono = truthy;\n        }, delay);\n    } else {\n        channel.mono = truthy;\n    }\n};\n\n/* get/setOmni\n --------------------------------------------------- */\nroot.getOmni = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.omni;\n};\n\nroot.setOmni = function (channelId, truthy) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.omni = truthy;\n        }, delay);\n    } else {\n        channel.omni = truthy;\n    }\n};\n\n/* get/setSolo\n --------------------------------------------------- */\nroot.getSolo = function (channelId) {\n    var channel = root.channels[channelId];\n    return channel && channel.solo;\n};\n\nroot.setSolo = function (channelId, truthy) {\n    var channel = root.channels[channelId];\n    if (delay) {\n        return setTimeout(function () {\n            channel.solo = truthy;\n        }, delay);\n    } else {\n        channel.solo = truthy;\n    }\n};\n\n\n/* note conversions\n --------------------------------------------------- */\nroot.keyToNote = {}; // C8  == 108\nroot.noteToKey = {}; // 108 ==  C8\n\n(function () {\n    var A0 = 0x15; // first note\n    var C8 = 0x6C; // last note\n    var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n    for (var n = A0; n <= C8; n++) {\n        var octave = (n - 12) / 12 >> 0;\n        var name = number2key[n % 12] + octave;\n        root.keyToNote[name] = n;\n        root.noteToKey[n] = name;\n    }\n})();\n\nmodule.exports = root\n},{\"../instruments.json\":14,\"lodash.find\":8}],20:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n MIDI.Player : 0.3.1 : 2015-03-26\n ----------------------------------------------------------\n https://github.com/mudcube/MIDI.js\n ----------------------------------------------------------\n */\nmodule.exports = function (MIDI) {\n    var generalMIDI = require('./gm');\n    var Replayer = require('../jasmid/replayer');\n    var MidiFile = require('../jasmid/midifile');\n    'use strict';\n    var midi = {};\n    midi.tracks = {};\n    midi.currentTime = 0;\n    midi.endTime = 0;\n    midi.restart = 0;\n    midi.playing = false;\n    midi.timeWarp = 1;\n    midi.startDelay = 0;\n    midi.start =\n        midi.resume = function (onsuccess) {\n            if (midi.currentTime < -1) {\n                midi.currentTime = -1;\n            }\n            startAudio(midi.currentTime, null, onsuccess);\n        };\n\n    midi.pause = function () {\n        var tmp = midi.restart;\n        stopAudio();\n        midi.restart = tmp;\n    };\n\n    midi.stop = function () {\n        stopAudio();\n        midi.restart = 0;\n        midi.currentTime = 0;\n    };\n\n    midi.addListener = function (onsuccess) {\n        onMidiEvent = onsuccess;\n    };\n\n    midi.removeListener = function () {\n        onMidiEvent = undefined;\n    };\n\n    midi.clearAnimation = function () {\n        if (midi.animationFrameId) {\n            cancelAnimationFrame(midi.animationFrameId);\n        }\n    };\n\n    midi.setAnimation = function (callback) {\n        var currentTime = 0;\n        var tOurTime = 0;\n        var tTheirTime = 0;\n        //\n        midi.clearAnimation();\n        ///\n        var frame = function () {\n            midi.animationFrameId = requestAnimationFrame(frame);\n            ///\n            if (midi.endTime === 0) {\n                return;\n            }\n            if (midi.playing) {\n                currentTime = (tTheirTime === midi.currentTime) ? tOurTime - Date.now() : 0;\n                if (midi.currentTime === 0) {\n                    currentTime = 0;\n                } else {\n                    currentTime = midi.currentTime - currentTime;\n                }\n                if (tTheirTime !== midi.currentTime) {\n                    tOurTime = Date.now();\n                    tTheirTime = midi.currentTime;\n                }\n            } else { // paused\n                currentTime = midi.currentTime;\n            }\n            ///\n            var endTime = midi.endTime;\n            var percent = currentTime / endTime;\n            var total = currentTime / 1000;\n            var minutes = total / 60;\n            var seconds = total - (minutes * 60);\n            var t1 = minutes * 60 + seconds;\n            var t2 = (endTime / 1000);\n            ///\n            if (t2 - t1 < -1.0) {\n                return;\n            } else {\n                callback({\n                    now: t1,\n                    end: t2,\n                    events: noteRegistrar\n                });\n            }\n        };\n        ///\n        requestAnimationFrame(frame);\n    };\n    // helpers\n    midi.loadMidiFile = function (onsuccess, onprogress, onerror) {\n        midi.replayer = new Replayer(MidiFile(midi.currentData), midi.timeWarp, null);\n        midi.data = midi.replayer.getData();\n        midi.endTime = getLength();\n        midi.tracks = midi.getFileTracks();\n        midi.instruments = midi.getFileInstruments();\n        MIDI.loadResource({instruments : midi.instruments, \"onsuccess\":onsuccess, onprogress: onprogress, onerror: onerror});\n    };\n\n    midi.loadFile = function (file, onsuccess, onprogress, onerror) {\n        midi.stop();\n        if (file.indexOf('base64,') !== -1) {\n            var data = window.atob(file.split(',')[1]);\n            midi.currentData = data;\n            midi.loadMidiFile(onsuccess, onprogress, onerror);\n        } else {\n            var fetch = new XMLHttpRequest();\n            fetch.open('GET', file);\n            fetch.overrideMimeType('text/plain; charset=x-user-defined');\n            fetch.onreadystatechange = function () {\n                if (this.readyState === 4) {\n                    if (this.status === 200) {\n                        var t = this.responseText || '';\n                        var ff = [];\n                        var mx = t.length;\n                        var scc = String.fromCharCode;\n                        for (var z = 0; z < mx; z++) {\n                            ff[z] = scc(t.charCodeAt(z) & 255);\n                        }\n                        ///\n                        var data = ff.join('');\n                        midi.currentData = data;\n                        midi.loadMidiFile(onsuccess, onprogress, onerror);\n                    } else {\n                        onerror && onerror('Unable to load MIDI file');\n                    }\n                }\n            };\n            fetch.send();\n        }\n    };\n\n    midi.getFileTracks = function(){\n        var tracks = {};\n        for (var n = 0; n < midi.data.length; n++) {\n            var event = midi.data[n][0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            var channel = event.channel;\n            switch (event.subtype) {\n                case 'programChange':\n                    tracks[midi.data[n][0].track] = channel;\n                    break;\n            }\n        }\n        return tracks;\n    }\n    midi.getFileInstruments = function () {\n        var instruments = {};\n        var programs = {};\n        var channels ={};\n\n        for (var n = 0; n < midi.data.length; n++) {\n            var event = midi.data[n][0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            var channel = event.channel;\n            switch (event.subtype) {\n                case 'controller':(event)\n//\t\t\t\tconsole.log(event.channel, MIDI.defineControl[event.controllerType], event.value);\n                    break;\n                case 'programChange':\n                    programs[channel] = event.programNumber;\n                    var gm = generalMIDI.GM.byId(event.programNumber);\n                    instruments[gm.id] = true;\n\n                    break;\n            }\n        }\n\n        var ret = [];\n        for (var key in instruments) {\n            ret.push(key);\n        }\n        return ret;\n    };\n\n    // Playing the audio\n\n    var eventQueue = []; // hold events to be triggered\n    var queuedTime; //\n    var startTime = 0; // to measure time elapse\n    var noteRegistrar = {}; // get event for requested note\n    var onMidiEvent = undefined; // listener\n    var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {\n        return setTimeout(function () {\n            var data = {\n                channel: channel,\n                note: note,\n                now: currentTime,\n                end: midi.endTime,\n                message: message,\n                velocity: velocity\n            };\n            //\n            if (message === 128) {\n                delete noteRegistrar[note];\n            } else {\n                noteRegistrar[note] = data;\n            }\n            if (onMidiEvent) {\n                onMidiEvent(data);\n            }\n            midi.currentTime = currentTime;\n            ///\n            eventQueue.shift();\n            ///\n            if (eventQueue.length < 1000) {\n                startAudio(queuedTime, true);\n            } else if (midi.currentTime === queuedTime && queuedTime < midi.endTime) { // grab next sequence\n                startAudio(queuedTime, true);\n            }\n        }, currentTime - offset);\n    };\n\n    var getContext = function () {\n        if (MIDI.api === 'webaudio') {\n            return MIDI.getContext();\n        } else {\n            midi.ctx = {currentTime: 0};\n        }\n        return midi.ctx;\n    };\n\n    var getLength = function () {\n        var data = midi.data;\n        var length = data.length;\n        var totalTime = 0.5;\n        for (var n = 0; n < length; n++) {\n            totalTime += data[n][1];\n        }\n        return totalTime;\n    };\n\n    var __now;\n    var getNow = function () {\n        if (window.performance && window.performance.now) {\n            return window.performance.now();\n        } else {\n            return Date.now();\n        }\n    };\n\n    var startAudio = function (currentTime, fromCache, onsuccess) {\n        if (!midi.replayer) {\n            return;\n        }\n        if (!fromCache) {\n            if (typeof currentTime === 'undefined') {\n                currentTime = midi.restart;\n            }\n            ///\n            midi.playing && stopAudio();\n            midi.playing = true;\n            midi.data = midi.replayer.getData();\n            midi.endTime = getLength();\n        }\n        ///\n        var note;\n        var offset = 0;\n        var messages = 0;\n        var data = midi.data;\n        var ctx = getContext();\n        var length = data.length;\n        //\n        queuedTime = 0;\n        ///\n        var interval = eventQueue[0] && eventQueue[0].interval || 0;\n        var foffset = currentTime - midi.currentTime;\n        ///\n        if (MIDI.api === 'webmidi') {\n            ctx.currentTime = getNow() / 1000;\n        } else if (MIDI.api !== 'webaudio') { // set currentTime on ctx\n            var now = getNow();\n            __now = __now || now;\n            ctx.currentTime = (now - __now) / 1000;\n        }\n        ///\n        startTime = ctx.currentTime;\n        ///\n        for (var n = 0; n < length && messages < 100; n++) {\n            var obj = data[n];\n            if ((queuedTime += obj[1]) < currentTime) {\n                offset = queuedTime;\n                continue;\n            }\n            ///\n            currentTime = queuedTime - offset;\n            ///\n            var event = obj[0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            ///\n            var channelId = event.channel;\n\n            var channel = MIDI.channels[channelId];\n            var delay = ctx.currentTime + ((currentTime + foffset + midi.startDelay) / 1000);\n            var queueTime = queuedTime - offset + midi.startDelay;\n            switch (event.subtype) {\n                case 'controller':\n                    MIDI.setController(channelId, event.controllerType, event.value, delay);\n                    break;\n                case 'programChange':\n                    // the percussion should not be set from the midi, it is set in the loader.\n                    if(channelId != 9){\n                        MIDI.programChange(channelId, event.programNumber, delay);\n                    }\n                    break;\n                case 'pitchBend':\n                    MIDI.pitchBend(channelId, event.value, delay);\n                    break;\n                case 'noteOn':\n                    if (channel.mute) break;\n                    note = event.noteNumber - (midi.MIDIOffset || 0);\n                    var temp = {\n                        event: event,\n                        time: queueTime,\n                        source: MIDI.noteOn(channelId, event.noteNumber, event.velocity, delay),\n                        interval: scheduleTracking(channelId, note, queuedTime + midi.startDelay, offset - foffset, 144, event.velocity)\n                    };\n                    eventQueue.push(temp);\n                    messages++;\n                    break;\n                case 'noteOff':\n                    if (channel.mute) break;\n                    note = event.noteNumber - (midi.MIDIOffset || 0);\n                    eventQueue.push({\n                        event: event,\n                        time: queueTime,\n                        source: MIDI.noteOff(channelId, event.noteNumber, delay),\n                        interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)\n                    });\n                    break;\n                default:\n                    break;\n            }\n        }\n        ///\n        onsuccess && onsuccess(eventQueue);\n    };\n\n    var stopAudio = function () {\n        var ctx = getContext();\n        midi.playing = false;\n        midi.restart += (ctx.currentTime - startTime) * 1000;\n        // stop the audio, and intervals\n        while (eventQueue.length) {\n            var o = eventQueue.pop();\n            window.clearInterval(o.interval);\n            if (!o.source) continue; // is not webaudio\n            if (typeof(o.source) === 'number') {\n                window.clearTimeout(o.source);\n            } else { // webaudio\n                o.source.disconnect(0);\n            }\n        }\n        // run callback to cancel any notes still playing\n        for (var key in noteRegistrar) {\n            var o = noteRegistrar[key]\n            if (noteRegistrar[key].message === 144 && onMidiEvent) {\n                onMidiEvent({\n                    channel: o.channel,\n                    note: o.note,\n                    now: o.now,\n                    end: o.end,\n                    message: 128,\n                    velocity: o.velocity\n                });\n            }\n        }\n        // reset noteRegistrar\n        noteRegistrar = {};\n    };\n\n    midi.setChannelVolume = function(val, channel){\n        MIDI.channels[channel].volume = val;\n        if(MIDI.api === \"webaudio\"){\n            for(var i = 0; i < eventQueue.length; i++){\n                var event = eventQueue[i];\n                if (event && event.source && typeof event.source.setChannelVolume === 'function' && event.source.channel === channel){\n                    event.source.setChannelVolume(val);\n                }\n            }\n        }\n    };\n    midi.setTrackVolume = function(val, track){\n        midi.setChannelVolume(val, midi.tracks[track]);\n    };\n\n    return midi;\n};\n\n},{\"../jasmid/midifile\":15,\"../jasmid/replayer\":16,\"./gm\":19}],21:[function(require,module,exports){\n/*\n ----------------------------------------------------------\n MIDI.Player : 0.3.1 : 2015-03-26\n ----------------------------------------------------------\n https://github.com/mudcube/MIDI.js\n ----------------------------------------------------------\n */\nmodule.exports = function (MIDI) {\n    var generalMIDI = require('./gm');\n    var Replayer = require('../jasmid/replayer');\n    var MidiFile = require('../jasmid/midifile');\n    'use strict';\n    var midi = {};\n    midi.tracks = {};\n    midi.currentTime = 0;\n    midi.endTime = 0;\n    midi.restart = 0;\n    midi.playing = false;\n    midi.timeWarp = 1;\n    midi.startDelay = 0;\n    midi.start =\n        midi.resume = function (onsuccess) {\n            if (midi.currentTime < -1) {\n                midi.currentTime = -1;\n            }\n            startAudio(midi.currentTime, null, onsuccess);\n        };\n\n    midi.pause = function () {\n        var tmp = midi.restart;\n        stopAudio();\n        midi.restart = tmp;\n    };\n\n    midi.stop = function () {\n        stopAudio();\n        midi.restart = 0;\n        midi.currentTime = 0;\n    };\n\n    midi.addListener = function (onsuccess) {\n        onMidiEvent = onsuccess;\n    };\n\n    midi.removeListener = function () {\n        onMidiEvent = undefined;\n    };\n\n    midi.clearAnimation = function () {\n        if (midi.animationFrameId) {\n            cancelAnimationFrame(midi.animationFrameId);\n        }\n    };\n\n    midi.setAnimation = function (callback) {\n        var currentTime = 0;\n        var tOurTime = 0;\n        var tTheirTime = 0;\n        //\n        midi.clearAnimation();\n        ///\n        var frame = function () {\n            midi.animationFrameId = requestAnimationFrame(frame);\n            ///\n            if (midi.endTime === 0) {\n                return;\n            }\n            if (midi.playing) {\n                currentTime = (tTheirTime === midi.currentTime) ? tOurTime - Date.now() : 0;\n                if (midi.currentTime === 0) {\n                    currentTime = 0;\n                } else {\n                    currentTime = midi.currentTime - currentTime;\n                }\n                if (tTheirTime !== midi.currentTime) {\n                    tOurTime = Date.now();\n                    tTheirTime = midi.currentTime;\n                }\n            } else { // paused\n                currentTime = midi.currentTime;\n            }\n            ///\n            var endTime = midi.endTime;\n            var percent = currentTime / endTime;\n            var total = currentTime / 1000;\n            var minutes = total / 60;\n            var seconds = total - (minutes * 60);\n            var t1 = minutes * 60 + seconds;\n            var t2 = (endTime / 1000);\n            ///\n            if (t2 - t1 < -1.0) {\n                return;\n            } else {\n                callback({\n                    now: t1,\n                    end: t2,\n                    events: noteRegistrar\n                });\n            }\n        };\n        ///\n        requestAnimationFrame(frame);\n    };\n    // helpers\n    midi.loadMidiFile = function (onsuccess, onprogress, onerror) {\n        midi.replayer = new Replayer(MidiFile(midi.currentData), midi.timeWarp, null);\n        midi.data = midi.replayer.getData();\n        midi.endTime = getLength();\n        midi.tracks = midi.getFileTracks();\n        midi.instruments = midi.getFileInstruments();\n        MIDI.loadResource({instruments : midi.instruments});\n    };\n\n    midi.loadFile = function (file, onsuccess, onprogress, onerror) {\n        midi.stop();\n        if (file.indexOf('base64,') !== -1) {\n            var data = window.atob(file.split(',')[1]);\n            midi.currentData = data;\n            midi.loadMidiFile(onsuccess, onprogress, onerror);\n        } else {\n            var fetch = new XMLHttpRequest();\n            fetch.open('GET', file);\n            fetch.overrideMimeType('text/plain; charset=x-user-defined');\n            fetch.onreadystatechange = function () {\n                if (this.readyState === 4) {\n                    if (this.status === 200) {\n                        var t = this.responseText || '';\n                        var ff = [];\n                        var mx = t.length;\n                        var scc = String.fromCharCode;\n                        for (var z = 0; z < mx; z++) {\n                            ff[z] = scc(t.charCodeAt(z) & 255);\n                        }\n                        ///\n                        var data = ff.join('');\n                        midi.currentData = data;\n                        midi.loadMidiFile(onsuccess, onprogress, onerror);\n                    } else {\n                        onerror && onerror('Unable to load MIDI file');\n                    }\n                }\n            };\n            fetch.send();\n        }\n    };\n\n    midi.getFileTracks = function(){\n        var tracks = {};\n        for (var n = 0; n < midi.data.length; n++) {\n            var event = midi.data[n][0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            var channel = event.channel;\n            switch (event.subtype) {\n                case 'programChange':\n                    tracks[midi.data[n][0].track] = channel;\n                    break;\n            }\n        }\n        return tracks;\n    }\n    midi.getFileInstruments = function () {\n        var instruments = {};\n        var programs = {};\n        var channels ={};\n\n        for (var n = 0; n < midi.data.length; n++) {\n            var event = midi.data[n][0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            var channel = event.channel;\n            switch (event.subtype) {\n                case 'controller':(event)\n//\t\t\t\tconsole.log(event.channel, MIDI.defineControl[event.controllerType], event.value);\n                    break;\n                case 'programChange':\n                    programs[channel] = event.programNumber;\n                    var gm = generalMIDI.GM.byId(event.programNumber);\n                    instruments[gm.id] = true;\n\n                    break;\n            }\n        }\n\n        var ret = [];\n        for (var key in instruments) {\n            ret.push(key);\n        }\n        return ret;\n    };\n\n    // Playing the audio\n\n    var eventQueue = []; // hold events to be triggered\n    var queuedTime; //\n    var startTime = 0; // to measure time elapse\n    var noteRegistrar = {}; // get event for requested note\n    var onMidiEvent = undefined; // listener\n    var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {\n        return setTimeout(function () {\n            var data = {\n                channel: channel,\n                note: note,\n                now: currentTime,\n                end: midi.endTime,\n                message: message,\n                velocity: velocity\n            };\n            //\n            if (message === 128) {\n                delete noteRegistrar[note];\n            } else {\n                noteRegistrar[note] = data;\n            }\n            if (onMidiEvent) {\n                onMidiEvent(data);\n            }\n            midi.currentTime = currentTime;\n            ///\n            eventQueue.shift();\n            ///\n            if (eventQueue.length < 1000) {\n                startAudio(queuedTime, true);\n            } else if (midi.currentTime === queuedTime && queuedTime < midi.endTime) { // grab next sequence\n                startAudio(queuedTime, true);\n            }\n        }, currentTime - offset);\n    };\n\n    var getContext = function () {\n        if (MIDI.api === 'webaudio') {\n            return MIDI.getContext();\n        } else {\n            midi.ctx = {currentTime: 0};\n        }\n        return midi.ctx;\n    };\n\n    var getLength = function () {\n        var data = midi.data;\n        var length = data.length;\n        var totalTime = 0.5;\n        for (var n = 0; n < length; n++) {\n            totalTime += data[n][1];\n        }\n        return totalTime;\n    };\n\n    var __now;\n    var getNow = function () {\n        if (window.performance && window.performance.now) {\n            return window.performance.now();\n        } else {\n            return Date.now();\n        }\n    };\n\n    var startAudio = function (currentTime, fromCache, onsuccess) {\n        if (!midi.replayer) {\n            return;\n        }\n        if (!fromCache) {\n            if (typeof currentTime === 'undefined') {\n                currentTime = midi.restart;\n            }\n            ///\n            midi.playing && stopAudio();\n            midi.playing = true;\n            midi.data = midi.replayer.getData();\n            midi.endTime = getLength();\n        }\n        ///\n        var note;\n        var offset = 0;\n        var messages = 0;\n        var data = midi.data;\n        var ctx = getContext();\n        var length = data.length;\n        //\n        queuedTime = 0;\n        ///\n        var interval = eventQueue[0] && eventQueue[0].interval || 0;\n        var foffset = currentTime - midi.currentTime;\n        ///\n        if (MIDI.api === 'webmidi') {\n            ctx.currentTime = getNow() / 1000;\n        } else if (MIDI.api !== 'webaudio') { // set currentTime on ctx\n            var now = getNow();\n            __now = __now || now;\n            ctx.currentTime = (now - __now) / 1000;\n        }\n        ///\n        startTime = ctx.currentTime;\n        ///\n        for (var n = 0; n < length && messages < 100; n++) {\n            var obj = data[n];\n            if ((queuedTime += obj[1]) < currentTime) {\n                offset = queuedTime;\n                continue;\n            }\n            ///\n            currentTime = queuedTime - offset;\n            ///\n            var event = obj[0].event;\n            if (event.type !== 'channel') {\n                continue;\n            }\n            ///\n            var channelId = event.channel;\n\n            var channel = MIDI.channels[channelId];\n            var delay = ctx.currentTime + ((currentTime + foffset + midi.startDelay) / 1000);\n            var queueTime = queuedTime - offset + midi.startDelay;\n            switch (event.subtype) {\n                case 'controller':\n                    MIDI.setController(channelId, event.controllerType, event.value, delay);\n                    break;\n                case 'programChange':\n                    // the percussion should not be set from the midi, it is set in the loader.\n                    if(channelId != 9){\n                        MIDI.programChange(channelId, event.programNumber, delay);\n                    }\n                    break;\n                case 'pitchBend':\n                    MIDI.pitchBend(channelId, event.value, delay);\n                    break;\n                case 'noteOn':\n                    if (channel.mute) break;\n                    note = event.noteNumber - (midi.MIDIOffset || 0);\n                    var temp = {\n                        event: event,\n                        time: queueTime,\n                        source: MIDI.noteOn(channelId, event.noteNumber, event.velocity, delay),\n                        interval: scheduleTracking(channelId, note, queuedTime + midi.startDelay, offset - foffset, 144, event.velocity)\n                    };\n                    eventQueue.push(temp);\n                    messages++;\n                    break;\n                case 'noteOff':\n                    if (channel.mute) break;\n                    note = event.noteNumber - (midi.MIDIOffset || 0);\n                    eventQueue.push({\n                        event: event,\n                        time: queueTime,\n                        source: MIDI.noteOff(channelId, event.noteNumber, delay),\n                        interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)\n                    });\n                    break;\n                default:\n                    break;\n            }\n        }\n        ///\n        onsuccess && onsuccess(eventQueue);\n    };\n\n    var stopAudio = function () {\n        var ctx = getContext();\n        midi.playing = false;\n        midi.restart += (ctx.currentTime - startTime) * 1000;\n        // stop the audio, and intervals\n        while (eventQueue.length) {\n            var o = eventQueue.pop();\n            window.clearInterval(o.interval);\n            if (!o.source) continue; // is not webaudio\n            if (typeof(o.source) === 'number') {\n                window.clearTimeout(o.source);\n            } else { // webaudio\n                o.source.disconnect(0);\n            }\n        }\n        // run callback to cancel any notes still playing\n        for (var key in noteRegistrar) {\n            var o = noteRegistrar[key]\n            if (noteRegistrar[key].message === 144 && onMidiEvent) {\n                onMidiEvent({\n                    channel: o.channel,\n                    note: o.note,\n                    now: o.now,\n                    end: o.end,\n                    message: 128,\n                    velocity: o.velocity\n                });\n            }\n        }\n        // reset noteRegistrar\n        noteRegistrar = {};\n    };\n\n    midi.setChannelVolume = function(val, channel){\n        MIDI.channels[channel].volume = val;\n        if(MIDI.api === \"webaudio\"){\n            for(var i = 0; i < eventQueue.length; i++){\n                var event = eventQueue[i];\n                if (event && event.source && typeof event.source.setChannelVolume === 'function' && event.source.channel === channel){\n                    event.source.setChannelVolume(val);\n                }\n            }\n        }\n    };\n    midi.setTrackVolume = function(val, track){\n        midi.setChannelVolume(val, midi.tracks[track]);\n    };\n\n    return midi;\n};\n\n},{\"../jasmid/midifile\":15,\"../jasmid/replayer\":16,\"./gm\":19}]},{},[18]);\n"],"file":"bundle.js","sourceRoot":"/source/"}